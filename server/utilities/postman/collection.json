{
	"info": {
		"_postman_id": "f33cdc2b-fd8b-4c2d-b07e-68929f4a7b53",
		"name": "Robert 2 API",
		"description": "### Introduction\n\nThis is the complete documentation of Robert 2 private API.  \nThis API exists to be used with a Robert 2 application client (GUI).\n\n\n### Overview\n\nPlease use you own environment variables. These variables are : `robert2_url`, `robert2_email`, and `robert2_password`.\n\nIn this documentation you'll see that these variables are replaced by the following examples:\n\n- `url: robert2-api.dev`\n- `email: your-email@dev.test`\n- `password: ******`.\n\nOf course, if you want to use the postman collection, you'll have to replace those values in your own environment.\n\n\n### Authentication\n\nRobert 2 API uses JWT Authentication.\n\nAt first, always ask for an Auth token by using the `AUTH - Token` request. In the response payload (if it's succesful) there is a `token` which should be stored locally, in order to be inserted in all other future requests' headers, as a `Bearer token header`.\n\nHere is an example of `Authorization` header value:\n\n    Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NDYyMTc3OTksImV4cCI6MTU0NjIyNDk5OSwidXNl\n\nIn postman, this is done automatically by using a global variable `auth_token`, which is then used in each requests' headers.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Bills",
			"item": [
				{
					"name": "Create bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"discountRate\": 10.0\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/events/1/bill",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"events",
								"1",
								"bill"
							]
						},
						"description": "Create a bill for a given event. This also creates a PDF file, and removes any existing bill for the event."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"discountRate\": 10.0\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{robert2_url}}/events/1/bill",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"1",
										"bill"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 8,\n    \"number\": \"20200212-00001\",\n    \"date\": \"2020-02-12 10:45:46\",\n    \"event_id\": 1,\n    \"beneficiary_id\": 2,\n    \"materials\": [\n        {\n            \"id\": 20,\n            \"name\": \"Panel LED IP\",\n            \"reference\": \"Panel IP\",\n            \"park_id\": 1,\n            \"category_id\": 2,\n            \"sub_category_id\": null,\n            \"rental_price\": 15,\n            \"replacement_price\": 950,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 1\n        },\n        {\n            \"id\": 209,\n            \"name\": \"Amplifié L-Acoustics MTD 108P\",\n            \"reference\": \"MTD108P\",\n            \"park_id\": 11,\n            \"category_id\": 1,\n            \"sub_category_id\": 2,\n            \"rental_price\": 37,\n            \"replacement_price\": 3000,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 2\n        },\n        {\n            \"id\": 242,\n            \"name\": \"1 16Amono male vers1 pc 16A femelle\",\n            \"reference\": \"adaptri camping 16mono-PC16\",\n            \"park_id\": 1,\n            \"category_id\": 2,\n            \"sub_category_id\": null,\n            \"rental_price\": 1,\n            \"replacement_price\": 30,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 2\n        }\n    ],\n    \"degressive_rate\": 1.75,\n    \"discount_rate\": 10,\n    \"vat_rate\": 20,\n    \"due_amount\": 171.99,\n    \"replacement_amount\": 7010,\n    \"currency\": \"EUR\",\n    \"user_id\": 1,\n    \"updated_at\": \"2020-02-12 10:45:46\",\n    \"created_at\": \"2020-02-12 10:45:46\"\n}"
						}
					]
				},
				{
					"name": "Get one bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/bills/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"bills",
								"1"
							]
						},
						"description": "Retreive one bill data."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/bills/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"bills",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"requested\": \"(GET) http://robert2-api.etoilenoire/api/bills/1\",\n        \"code\": 404,\n        \"message\": \"The required resource was not found.\",\n        \"file\": \"/home/polo/WEB/perso/Robert/Robert2-api/src/App/Controllers/BillController.php, line 40.\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/bills/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"bills",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 8,\n    \"number\": \"20200212-00001\",\n    \"date\": \"2020-02-12 10:45:46\",\n    \"event_id\": 1,\n    \"beneficiary_id\": 2,\n    \"materials\": [\n        {\n            \"id\": 20,\n            \"name\": \"Panel LED IP\",\n            \"reference\": \"Panel IP\",\n            \"park_id\": 1,\n            \"category_id\": 2,\n            \"sub_category_id\": null,\n            \"rental_price\": 15,\n            \"replacement_price\": 950,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 1\n        },\n        {\n            \"id\": 209,\n            \"name\": \"Amplifié L-Acoustics MTD 108P\",\n            \"reference\": \"MTD108P\",\n            \"park_id\": 11,\n            \"category_id\": 1,\n            \"sub_category_id\": 2,\n            \"rental_price\": 37,\n            \"replacement_price\": 3000,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 2\n        },\n        {\n            \"id\": 242,\n            \"name\": \"1 16Amono male vers1 pc 16A femelle\",\n            \"reference\": \"adaptri camping 16mono-PC16\",\n            \"park_id\": 1,\n            \"category_id\": 2,\n            \"sub_category_id\": null,\n            \"rental_price\": 1,\n            \"replacement_price\": 30,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 2\n        }\n    ],\n    \"degressive_rate\": 1.75,\n    \"discount_rate\": 10,\n    \"vat_rate\": 20,\n    \"due_amount\": 171.99,\n    \"replacement_amount\": 7010,\n    \"currency\": \"EUR\",\n    \"user_id\": 1,\n    \"updated_at\": \"2020-02-12 10:45:46\",\n    \"created_at\": \"2020-02-12 10:45:46\"\n}"
						}
					]
				},
				{
					"name": "Delete a bill",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/bills/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"bills",
								"1"
							]
						},
						"description": "Remove a bill using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/bills/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"bills",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						},
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/bills/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"bills",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 8,\n    \"number\": \"20200212-00001\",\n    \"date\": \"2020-02-12 10:45:46\",\n    \"event_id\": 1,\n    \"beneficiary_id\": 2,\n    \"materials\": [\n        {\n            \"id\": 20,\n            \"name\": \"Panel LED IP\",\n            \"reference\": \"Panel IP\",\n            \"park_id\": 1,\n            \"category_id\": 2,\n            \"sub_category_id\": null,\n            \"rental_price\": 15,\n            \"replacement_price\": 950,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 1\n        },\n        {\n            \"id\": 209,\n            \"name\": \"Amplifié L-Acoustics MTD 108P\",\n            \"reference\": \"MTD108P\",\n            \"park_id\": 11,\n            \"category_id\": 1,\n            \"sub_category_id\": 2,\n            \"rental_price\": 37,\n            \"replacement_price\": 3000,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 2\n        },\n        {\n            \"id\": 242,\n            \"name\": \"1 16Amono male vers1 pc 16A femelle\",\n            \"reference\": \"adaptri camping 16mono-PC16\",\n            \"park_id\": 1,\n            \"category_id\": 2,\n            \"sub_category_id\": null,\n            \"rental_price\": 1,\n            \"replacement_price\": 30,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"quantity\": 2\n        }\n    ],\n    \"degressive_rate\": 1.75,\n    \"discount_rate\": 10,\n    \"vat_rate\": 20,\n    \"due_amount\": 171.99,\n    \"replacement_amount\": 7010,\n    \"currency\": \"EUR\",\n    \"user_id\": 1,\n    \"updated_at\": \"2020-02-12 10:45:46\",\n    \"created_at\": \"2020-02-12 10:45:46\",\n    \"deleted_at\": null\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/bills/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"bills",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "Bills are attached to events, beneficiaries and contain materials. You can create bills (with a discount rate) and delete them, it's not possible to update them. When a bill is created, a PDF file is generated within the `/data/bills` folder.\n\nThe *number* of a bill is composed by the current date (format `Ymd`) and the `id` of the attached event.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Create category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"newCateg\"\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/categories",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Just give a name, and here you go."
					},
					"response": [
						{
							"name": "Unauthorized error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"newCateg\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"Signature verification failed\",\n        \"details\": null\n    }\n}"
						},
						{
							"name": "Expired token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"newCateg\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"Expired token\",\n        \"details\": null\n    }\n}"
						},
						{
							"name": "ACL blocked",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"newCateg\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Unauthorized by ACL: users of group 'visitor' are not allowed to access this API endpoint.\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"newCateg\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"radio\",\n    \"updated_at\": \"2018-12-31 13:14:19\",\n    \"created_at\": \"2018-12-31 13:14:19\",\n    \"sub_categories\": []\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"n\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"name\": [\n                \"name must have a length between 2 and 96\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": null\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/categories/3",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"categories",
								"3"
							]
						},
						"description": "Change the name of a category."
					},
					"response": [
						{
							"name": "Sucess",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Just modified\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories/5",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"Just modified\",\n    \"created_at\": \"2018-12-31 13:14:19\",\n    \"updated_at\": \"2018-12-31 13:17:24\",\n    \"deleted_at\": null,\n    \"sub_categories\": []\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"J\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"1"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"name\": [\n                \"name must have a length between 2 and 96\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Not Found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Just modified\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Unauthorized error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"J\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/categories/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"1"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"Token not found.\",\n        \"details\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Get all categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e069c7-17d9-4603-a6b9-ca13f4bf0500",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-api-key",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/categories",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"categories"
							]
						},
						"description": "Retreive all the categories of the application, with their nested sub-categories, sorted by name, and within pagination."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/categories",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/categories?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/categories?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/categories\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 5,\n        \"total\": 5\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"sound\",\n            \"created_at\": \"2018-12-26 23:06:09\",\n            \"updated_at\": \"2018-12-26 23:06:09\",\n            \"deleted_at\": null,\n            \"sub_categories\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"Mix\",\n                    \"category_id\": 1\n                }\n            ]\n        },\n        {\n            \"id\": 2,\n            \"name\": \"light\",\n            \"created_at\": \"2018-12-29 19:15:20\",\n            \"updated_at\": \"2018-12-29 19:15:20\",\n            \"deleted_at\": null,\n            \"sub_categories\": []\n        }\n    ]\n}"
						},
						{
							"name": "Soft deleted only",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/categories?deleted=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "deleted",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/categories?deleted=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/categories?deleted=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/categories\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 2,\n        \"total\": 2\n    },\n    \"data\": [\n        {\n            \"id\": 5,\n            \"name\": \"deleted\",\n            \"created_at\": \"2019-01-06 18:59:39\",\n            \"updated_at\": \"2019-01-13 11:43:02\",\n            \"deleted_at\": \"2019-01-13 11:43:02\",\n            \"sub_categories\": []\n        },\n        {\n            \"id\": 4,\n            \"name\": \"other one\",\n            \"created_at\": \"2019-01-06 18:59:39\",\n            \"updated_at\": \"2019-01-13 11:42:50\",\n            \"deleted_at\": \"2019-01-13 11:42:50\",\n            \"sub_categories\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get one category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/categories/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"categories",
								"1"
							]
						},
						"description": "Retreive one category with its nested sub-categories"
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/categories/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/categories/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"sound\",\n    \"created_at\": \"2018-12-26 23:06:09\",\n    \"updated_at\": \"2018-12-26 23:06:09\",\n    \"deleted_at\": null,\n    \"sub_categories\": [\n        {\n            \"id\": 1,\n            \"name\": \"Mix\",\n            \"category_id\": 1\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete a category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/categories/5",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"categories",
								"5"
							]
						},
						"description": "Remove a category using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/categories/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/categories/5",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						},
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/categories/5",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"Just modified\",\n    \"created_at\": \"2018-12-31 13:14:19\",\n    \"updated_at\": \"2018-12-31 13:25:22\",\n    \"deleted_at\": \"2018-12-31 13:25:22\",\n    \"sub_categories\": []\n}"
						}
					]
				},
				{
					"name": "Restore a category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{robert2_url}}/categories/restore/5",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"categories",
								"restore",
								"5"
							]
						},
						"description": "Restore a category that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Not Found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{robert2_url}}/categories/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{robert2_url}}/categories/restore/5",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"categories",
										"restore",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"divers\",\n    \"created_at\": \"2019-01-06 18:59:39\",\n    \"updated_at\": \"2019-01-13 16:33:35\",\n    \"deleted_at\": null,\n    \"sub_categories\": []\n}"
						}
					]
				}
			],
			"description": "Categories are simple entities that allows to tidy up materials. Each category may have several sub-categories.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "29d47e26-6267-4201-9aa9-3ceb525aefda",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "10f8a770-9ff5-4644-8d45-ab2934c1e0d0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Sub Categories",
			"item": [
				{
					"name": "Create sub-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"speakers\",\n    \"category_id\": 1\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/subcategories",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"subcategories"
							]
						},
						"description": "Just give a name and a valid category ID, and here you go."
					},
					"response": [
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"speakers\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/subcategories",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"code\": 400,\n        \"message\": \"Validation failed. See error[details] for more informations.\",\n        \"details\": {\n            \"category_id\": [\n                \"category_id must not be empty\",\n                \"category_id must be numeric\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"speakers\",\n    \"category_id\": 1\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/subcategories",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"speakers\",\n    \"category_id\": 1,\n    \"updated_at\": \"2019-02-02 15:43:13\",\n    \"created_at\": \"2019-02-02 15:43:13\",\n    \"id\": 2\n}"
						}
					]
				},
				{
					"name": "Update sub-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Mixers modified\"\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/subcategories/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"subcategories",
								"1"
							]
						},
						"description": "Change the name of a sub-category."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Mixers modified\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/subcategories/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Mixers modified\",\n    \"category_id\": 1,\n    \"created_at\": \"2019-02-02 15:37:56\",\n    \"updated_at\": \"2019-02-02 15:50:52\",\n    \"deleted_at\": null\n}"
						},
						{
							"name": "Not Found Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Mixers modified\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/subcategories/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"requested\": \"(PUT) http://robert2-api.nostromo/api/subcategories/999\",\n        \"code\": 404,\n        \"message\": \"The required resource was not found.\",\n        \"file\": \"/home/polo/WEB/perso/Robert2-api/src/App/Controllers/BaseController.php, line 105.\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete a sub-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/subcategories/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"subcategories",
								"2"
							]
						},
						"description": "Remove a sub-category using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/subcategories/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"speakers\",\n    \"category_id\": 1,\n    \"created_at\": \"2019-02-02 15:43:13\",\n    \"updated_at\": \"2019-02-02 15:43:23\",\n    \"deleted_at\": \"2019-02-02 15:43:23\"\n}"
						},
						{
							"name": "Not Found Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/subcategories/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"requested\": \"(DELETE) http://robert2-api.nostromo/api/subcategories/999\",\n        \"code\": 404,\n        \"message\": \"The required resource was not found.\",\n        \"file\": \"/home/polo/WEB/perso/Robert2-api/src/App/Models/BaseModel.php, line 118.\"\n    }\n}"
						},
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/subcategories/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						}
					]
				},
				{
					"name": "Restore a sub-category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{robert2_url}}/subcategories/restore/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"subcategories",
								"restore",
								"2"
							]
						},
						"description": "Restore a sub-category that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{robert2_url}}/subcategories/restore/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories",
										"restore",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"speakers\",\n    \"category_id\": 1,\n    \"created_at\": \"2019-02-02 15:43:13\",\n    \"updated_at\": \"2019-02-02 15:46:35\",\n    \"deleted_at\": null\n}"
						},
						{
							"name": "Not Found Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{robert2_url}}/subcategories/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"subcategories",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"requested\": \"(PUT) http://robert2-api.nostromo/api/subcategories/restore/999\",\n        \"code\": 404,\n        \"message\": \"The required resource was not found.\",\n        \"file\": \"/home/polo/WEB/perso/Robert2-api/src/App/Models/BaseModel.php, line 143.\"\n    }\n}"
						}
					]
				}
			],
			"description": "Categories are simple entities that allows to tidy up materials. Each category may have several sub-categories.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "29d47e26-6267-4201-9aa9-3ceb525aefda",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "10f8a770-9ff5-4644-8d45-ab2934c1e0d0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Companies",
			"item": [
				{
					"name": "Create company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "957ac997-9fa5-43a9-a020-b2ab1513a3e0",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"legal_name\": \"Gniuk Company\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/companies",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"companies"
							]
						},
						"description": "Give at least the company legal name, and voilà!"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"legal_name\": \"New Company\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/companies",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"legal_name\": \"New Company\",\n    \"updated_at\": \"2018-12-31 15:04:18\",\n    \"created_at\": \"2018-12-31 15:04:18\",\n    \"country\": null\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"legal_name\": \"\",\n\t\"postal_code\": \"12345678910\",\n\t\"country_id\": \"invalid\",\n\t\"phone\": \"err\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/companies",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"legal_name\": [\n                \"legal_name must not be empty\",\n                \"legal_name must have a length between 1 and 255\"\n            ],\n            \"postal_code\": [\n                \"postal_code must have a length lower than 10\"\n            ],\n            \"country_id\": [\n                \"country_id must be numeric\"\n            ],\n            \"phone\": [\n                \"phone must be a valid telephone number\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "957ac997-9fa5-43a9-a020-b2ab1513a3e0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"legal_name\": \"Modified Company\",\n\t\"street\": \"central av. 42\",\n\t\"postal_code\": \"5550\",\n\t\"locality\": \"Somewhereville\",\n\t\"country_id\": 1\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/companies/3",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"companies",
								"3"
							]
						},
						"description": "Modify a company's informations."
					},
					"response": [
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"legal_name\": \"Modified Company\",\n\t\"street\": \"central av. 42\",\n\t\"postal_code\": \"12345678910\",\n\t\"locality\": \"Somewhereville\",\n\t\"country_id\": \"invalid\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/companies/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"1"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"country_id\": [\n                \"country_id must be numeric\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"legal_name\": \"Modified Company\",\n\t\"street\": \"central av. 42\",\n\t\"postal_code\": \"5550\",\n\t\"locality\": \"Somewhereville\",\n\t\"country_id\": 1\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/companies/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"legal_name\": \"Modified Company\",\n    \"street\": \"central av. 42\",\n    \"postal_code\": \"5550\",\n    \"locality\": \"Somewhereville\",\n    \"country_id\": 1,\n    \"phone\": null,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 15:04:18\",\n    \"updated_at\": \"2018-12-31 15:14:15\",\n    \"deleted_at\": null,\n    \"country\": {\n        \"id\": 1,\n        \"name\": \"France\",\n        \"code\": \"FR\"\n    }\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"legal_name\": \"Modified Company\",\n\t\"street\": \"central av. 42\",\n\t\"postal_code\": \"5550\",\n\t\"locality\": \"Somewhereville\",\n\t\"country_id\": 1\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/companies/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get all companies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c12697e-3a74-4765-8a6f-f575efcd4cae",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/companies",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"companies"
							]
						},
						"description": "Retreive all the companies in the application, sorted by name, and within pagination."
					},
					"response": [
						{
							"name": "Soft deleted only",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/companies?deleted=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies"
									],
									"query": [
										{
											"key": "deleted",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/companies?deleted=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/companies?deleted=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/companies\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 3,\n        \"total\": 3\n    },\n    \"data\": [\n        {\n            \"id\": 6,\n            \"legal_name\": \"Gniuk Company\",\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"phone\": null,\n            \"note\": null,\n            \"created_at\": \"2019-01-12 00:02:01\",\n            \"updated_at\": \"2019-01-12 00:03:34\",\n            \"deleted_at\": \"2019-01-12 00:03:34\",\n            \"country\": null\n        },\n        {\n            \"id\": 4,\n            \"legal_name\": \"Nouche Company\",\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"phone\": null,\n            \"note\": null,\n            \"created_at\": \"2019-01-10 22:44:04\",\n            \"updated_at\": \"2019-01-10 22:44:33\",\n            \"deleted_at\": \"2019-01-10 22:44:33\",\n            \"country\": null\n        },\n        {\n            \"id\": 3,\n            \"legal_name\": \"Zer Company\",\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"phone\": null,\n            \"note\": null,\n            \"created_at\": \"2019-01-10 22:43:58\",\n            \"updated_at\": \"2019-01-12 00:01:10\",\n            \"deleted_at\": \"2019-01-12 00:01:10\",\n            \"country\": null\n        }\n    ]\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/companies",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/companies?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/companies?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/companies\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"legal_name\": \"Modified Company\",\n            \"street\": \"central av. 42\",\n            \"postal_code\": \"5550\",\n            \"locality\": \"Somewhereville\",\n            \"country_id\": 1,\n            \"phone\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 15:04:18\",\n            \"updated_at\": \"2018-12-31 15:14:15\",\n            \"deleted_at\": null,\n            \"country\": {\n                \"id\": 1,\n                \"name\": \"France\",\n                \"code\": \"FR\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get one company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "012c9212-c04d-4da7-88e8-ec40e4f3e416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/companies/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"companies",
								"1"
							]
						},
						"description": "Retreive one company with all its informations."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/companies/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"legal_name\": \"Wonderful inc.\",\n    \"street\": \"central av. 42\",\n    \"postal_code\": \"5550\",\n    \"locality\": \"Somewhereville\",\n    \"country_id\": 1,\n    \"phone\": null,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 15:04:18\",\n    \"updated_at\": \"2018-12-31 15:14:15\",\n    \"deleted_at\": null,\n    \"country\": {\n        \"id\": 1,\n        \"name\": \"France\",\n        \"code\": \"FR\"\n    }\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/companies/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get a company's people",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4e7ead48-1483-43f4-862a-c0ba50238ce9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/companies/1/persons",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"companies",
								"1",
								"persons"
							]
						},
						"description": "Retreive all the _Persons_ attached to a given company."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/companies/1/persons",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"1",
										"persons"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/companies/3/persons?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/companies/3/persons?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/companies/3/persons\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"user_id\": null,\n            \"first_name\": \"Jean\",\n            \"last_name\": \"Destroy\",\n            \"nickname\": \"to-be-deleted\",\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": 3,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 00:52:53\",\n            \"updated_at\": \"2018-12-31 00:52:53\",\n            \"deleted_at\": null,\n            \"full_name\": \"Destroy Jean\",\n            \"country\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Search in companies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02ad4041-b121-4d5e-a26e-29cfd7655c70",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/companies/search?legal_name=modif",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"companies",
								"search"
							],
							"query": [
								{
									"key": "legal_name",
									"value": "modif"
								}
							]
						},
						"description": "Search a company by its legal name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/companies/search?legal_name=modif",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"search"
									],
									"query": [
										{
											"key": "legal_name",
											"value": "modif"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/companies/search?legal_name=modif&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/companies/search?legal_name=modif&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/companies/search\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"legal_name\": \"Modified Company\",\n            \"street\": \"central av. 42\",\n            \"postal_code\": \"5550\",\n            \"locality\": \"Somewhereville\",\n            \"country_id\": 1,\n            \"phone\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 15:04:18\",\n            \"updated_at\": \"2018-12-31 15:14:15\",\n            \"deleted_at\": null,\n            \"country\": {\n                \"id\": 1,\n                \"name\": \"France\",\n                \"code\": \"FR\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete a company",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{robert2_url}}/companies/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"companies",
								"1"
							]
						},
						"description": "Remove a company using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{robert2_url}}/companies/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{robert2_url}}/companies/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"legal_name\": \"Modified Company\",\n    \"street\": \"central av. 42\",\n    \"postal_code\": \"5550\",\n    \"locality\": \"Somewhereville\",\n    \"country_id\": 1,\n    \"phone\": null,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 15:04:18\",\n    \"updated_at\": \"2018-12-31 15:28:27\",\n    \"deleted_at\": \"2018-12-31 15:28:27\",\n    \"country\": {\n        \"id\": 1,\n        \"name\": \"France\",\n        \"code\": \"FR\"\n    }\n}"
						},
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{robert2_url}}/companies/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						}
					]
				},
				{
					"name": "Restore company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "012c9212-c04d-4da7-88e8-ec40e4f3e416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/companies/restore/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"companies",
								"restore",
								"1"
							]
						},
						"description": "Restore a company that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/companies/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/companies/restore/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"companies",
										"restore",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"legal_name\": \"Modified Company\",\n    \"street\": \"central av. 42\",\n    \"postal_code\": \"5550\",\n    \"locality\": \"Somewhereville\",\n    \"country_id\": 1,\n    \"phone\": null,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 15:04:18\",\n    \"updated_at\": \"2018-12-31 15:28:27\",\n    \"deleted_at\": null,\n    \"country\": {\n        \"id\": 1,\n        \"name\": \"France\",\n        \"code\": \"FR\"\n    }\n}"
						}
					]
				}
			],
			"description": "Companies have a name, and a set of other useful informations like address and phone number. They can be linked to Persons.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2bb9cbad-d39d-4f61-af87-69bf10f64257",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b2d79dc1-7371-4657-9bad-21583f7244ba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Create event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user_id\": 1,\n    \"title\": \"Fête de la musique\",\n    \"start_date\": \"2019-06-21 00:00:00\",\n    \"end_date\": \"2019-06-21 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Toulouse - Place du Capitole\",\n    \"beneficiaries\": [5],\n    \"assignees\": [3],\n    \"materials\": [\n    \t{\"id\": 3, \"quantity\": 1},\n    \t{\"id\": 4, \"quantity\": 5}\n    ]\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/events",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"events"
							]
						},
						"description": "To create an event, the following fields _must be provided_:\n\n- `user_id`\n- `title`\n- `start_date`\n- `end_date`\n- `location`"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user_id\": 1,\n    \"title\": \"Nouvel an\",\n    \"start_date\": \"2018-12-31 00:00:00\",\n    \"end_date\": \"2019-01-01 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Marseille\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{robert2_url}}/events",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_id\": 1,\n    \"title\": \"Nouvel an\",\n    \"start_date\": \"2018-12-31 00:00:00\",\n    \"end_date\": \"2019-01-01 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Marseille\",\n    \"updated_at\": \"2018-12-31 16:22:00\",\n    \"created_at\": \"2018-12-31 16:22:00\",\n    \"id\": 2,\n    \"user\": {\n    \t\"id\": 1,\n        \"pseudo\": \"admin\",\n        \"email\": \"admin@robertmanager.org\",\n        \"group_id\": \"admin\",\n        \"created_at\": \"2018-12-29 19:12:01\",\n        \"updated_at\": \"2018-12-29 19:12:01\",\n        \"deleted_at\": null,\n        \"person\": {\n            \"id\": 2,\n            \"user_id\": 2,\n            \"first_name\": \"Admin\",\n            \"last_name\": \"Robertus\",\n            \"nickname\": null,\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-29 19:12:01\",\n            \"updated_at\": \"2018-12-29 19:12:01\",\n            \"deleted_at\": null,\n            \"full_name\": \"Robertus Admin\",\n            \"country\": null\n        }\n    },\n    \"beneficiaries\": [],\n    \"assignees\": [],\n    \"materials\": []\n}"
						},
						{
							"name": "Success with related entities",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user_id\": 1,\n    \"title\": \"Fête de la musique\",\n    \"start_date\": \"2019-06-21 00:00:00\",\n    \"end_date\": \"2019-06-21 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Toulouse - Place du Capitole\",\n    \"beneficiaries\": [3],\n    \"assignees\": [2],\n    \"materials\": [\n    \t{\"id\": 3, \"quantity\": 1},\n    \t{\"id\": 4, \"quantity\": 5}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{robert2_url}}/events",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"user_id\": 1,\n    \"title\": \"Fête de la musique\",\n    \"description\": null,\n    \"start_date\": \"2019-06-21 00:00:00\",\n    \"end_date\": \"2019-06-21 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Toulouse - Place du Capitole\",\n    \"created_at\": \"2019-09-21 14:25:52\",\n    \"updated_at\": \"2019-09-21 14:25:52\",\n    \"deleted_at\": null,\n    \"user\": {\n    \t\"id\": 1,\n        \"pseudo\": \"admin\",\n        \"email\": \"admin@robertmanager.org\",\n        \"group_id\": \"admin\",\n        \"created_at\": \"2018-12-29 19:12:01\",\n        \"updated_at\": \"2018-12-29 19:12:01\",\n        \"deleted_at\": null,\n        \"person\": {\n            \"id\": 2,\n            \"user_id\": 2,\n            \"first_name\": \"Admin\",\n            \"last_name\": \"Robertus\",\n            \"nickname\": null,\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-29 19:12:01\",\n            \"updated_at\": \"2018-12-29 19:12:01\",\n            \"deleted_at\": null,\n            \"full_name\": \"Robertus Admin\",\n            \"country\": null\n        }\n    },\n    \"assignees\": [\n        {\n            \"id\": 2,\n            \"first_name\": \"Member\",\n            \"last_name\": \"Technician\",\n            \"nickname\": null,\n            \"full_name\": \"Technician Member\",\n            \"country\": null,\n            \"pivot\": {\n                \"event_id\": \"3\",\n                \"person_id\": \"2\"\n            }\n        }\n    ],\n    \"beneficiaries\": [\n        {\n            \"id\": 3,\n            \"first_name\": \"Customer\",\n            \"last_name\": \"Client\",\n            \"full_name\": \"Client Customer\",\n            \"country\": null,\n            \"pivot\": {\n                \"event_id\": \"3\",\n                \"person_id\": \"3\"\n            }\n        }\n    ],\n    \"materials\": [\n        {\n            \"id\": 3,\n            \"name\": \"Yamaha M7CL\",\n            \"description\": \"La grosse berta new age\",\n            \"reference\": \"M7CL\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 1,\n            \"rental_price\": 75.55,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 525.35,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"park\": {\n                \"id\": 1,\n                \"name\": \"default\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"Son\"\n            },\n            \"sub_category\": {\n                \"id\": 1,\n                \"name\": \"Consoles de mix\",\n                \"category_id\": 1\n            },\n            \"attributes\": [],\n            \"pivot\": {\n                \"event_id\": 3,\n                \"material_id\": 3,\n                \"quantity\": 1\n            }\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Projo PAR56\",\n            \"description\": \"Petit spot tranquille\",\n            \"reference\": \"PAR56\",\n            \"park_id\": 1,\n            \"category_id\": 2,\n            \"sub_category_id\": 4,\n            \"rental_price\": 6.5,\n            \"stock_quantity\": 24,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": null,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"park\": {\n                \"id\": 1,\n                \"name\": \"default\"\n            },\n            \"category\": {\n                \"id\": 2,\n                \"name\": \"Lumière\"\n            },\n            \"sub_category\": {\n                \"id\": 4,\n                \"name\": \"Projos Trad\",\n                \"category_id\": 2\n            },\n            \"attributes\": [],\n            \"pivot\": {\n                \"event_id\": 3,\n                \"material_id\": 4,\n                \"quantity\": 5\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user_id\": 1,\n    \"title\": \"N\",\n    \"start_date\": \"15-15-2018\",\n    \"end_date\": \"59:59\",\n    \"is_confirmed\": \"invalid\",\n    \"location\": \"N\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/events",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"title\": [\n                \"title must have a length between 2 and 255\"\n            ],\n            \"start_date\": [\n                \"start_date must be a valid date\"\n            ],\n            \"end_date\": [\n                \"end_date must be a valid date\"\n            ],\n            \"is_confirmed\": [\n                \"is_confirmed must be a boolean\"\n            ],\n            \"location\": [\n                \"location must have a length between 2 and 64\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": 2,\n    \"title\": \"C'est noël\",\n    \"start_date\": \"2018-12-24 00:00:00\",\n    \"end_date\": \"2018-12-25 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Dijon, France\",\n    \"beneficiaries\": [23, 24],\n    \"assignees\": [30, 31],\n    \"materials\": [\n    \t{\"id\": 3, \"quantity\": 1},\n    \t{\"id\": 5, \"quantity\": 1},\n    \t{\"id\": 7, \"quantity\": 3}\n    ]\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/events/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"events",
								"1"
							]
						},
						"description": "Modify an event informations."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": 1,\n    \"title\": \"C'est noël\",\n    \"start_date\": \"2018-12-24 00:00:00\",\n    \"end_date\": \"2018-12-25 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Dijon, France\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/events/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user_id\": \"nobody\",\n    \"title\": \"N\",\n    \"start_date\": \"15-15-2018\",\n    \"end_date\": \"59:59\",\n    \"is_confirmed\": \"invalid\",\n    \"location\": \"N\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/events/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"1"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"user_id\": [\n                \"user_id must be numeric\"\n            ],\n            \"title\": [\n                \"title must have a length between 2 and 255\"\n            ],\n            \"start_date\": [\n                \"start_date must be a valid date\"\n            ],\n            \"end_date\": [\n                \"end_date must be a valid date\"\n            ],\n            \"is_confirmed\": [\n                \"is_confirmed must be a boolean\"\n            ],\n            \"location\": [\n                \"location must have a length between 2 and 64\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Success with related entities",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": 2,\n    \"title\": \"C'est noël\",\n    \"start_date\": \"2018-12-24 00:00:00\",\n    \"end_date\": \"2018-12-25 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Dijon, France\",\n    \"beneficiaries\": [5, 6],\n    \"assignees\": [3, 4],\n    \"materials\": [\n    \t{\"id\": 3, \"quantity\": 1},\n    \t{\"id\": 5, \"quantity\": 1},\n    \t{\"id\": 7, \"quantity\": 3}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{robert2_url}}/events/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"user_id\": 1,\n    \"title\": \"C'est noël\",\n    \"description\": \"Petit test\",\n    \"start_date\": \"2018-12-24 00:00:00\",\n    \"end_date\": \"2018-12-25 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Dijon, France\",\n    \"created_at\": \"2019-01-13 11:45:14\",\n    \"updated_at\": \"2019-09-20 00:00:55\",\n    \"deleted_at\": null,\n    \"user\": {\n        \"id\": 2,\n        \"pseudo\": \"newuser\",\n        \"email\": \"newuser@robertmanager.org\",\n        \"group_id\": \"member\",\n        \"person\": {\n            \"id\": 3,\n            \"user_id\": 2,\n            \"first_name\": \"Member\",\n            \"last_name\": \"Test\",\n            \"nickname\": null,\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2019-01-13 12:15:01\",\n            \"updated_at\": \"2019-01-13 12:15:01\",\n            \"deleted_at\": null,\n            \"full_name\": \"Test Member\",\n            \"country\": null\n        }\n    },\n    \"assignees\": [\n        {\n            \"id\": 5,\n            \"first_name\": \"Victor\",\n            \"last_name\": \"Testing\",\n            \"nickname\": \"Vic\",\n            \"full_name\": \"Maillardet Victor\",\n            \"country\": null,\n            \"pivot\": {\n                \"event_id\": \"1\",\n                \"person_id\": \"5\"\n            }\n        },\n        {\n            \"id\": 6,\n            \"first_name\": \"Emile\",\n            \"last_name\": \"Loustik\",\n            \"nickname\": \"Milou\",\n            \"full_name\": \"Loustik Emile\",\n            \"country\": null,\n            \"pivot\": {\n                \"event_id\": \"1\",\n                \"person_id\": \"6\"\n            }\n        }\n    ],\n    \"beneficiaries\": [\n        {\n            \"id\": 3,\n            \"first_name\": \"Jean\",\n            \"last_name\": \"Testing\",\n            \"full_name\": \"Testing Jean\",\n            \"country\": null,\n            \"pivot\": {\n                \"event_id\": \"1\",\n                \"person_id\": \"3\"\n            }\n        },\n        {\n            \"id\": 4,\n            \"first_name\": \"Raoul\",\n            \"last_name\": \"Cool\",\n            \"full_name\": \"Cool Raoul\",\n            \"country\": null,\n            \"pivot\": {\n                \"event_id\": \"1\",\n                \"person_id\": \"4\"\n            }\n        }\n    ],\n    \"materials\": [\n        {\n            \"id\": 3,\n            \"name\": \"Yamaha M7CL\",\n            \"description\": \"La grosse berta new age\",\n            \"reference\": \"M7CL\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 1,\n            \"rental_price\": 75.55,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 525.35,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"park\": {\n                \"id\": 1,\n                \"name\": \"default\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"Son\"\n            },\n            \"sub_category\": {\n                \"id\": 1,\n                \"name\": \"Consoles de mix\",\n                \"category_id\": 1\n            },\n            \"attributes\": [],\n            \"pivot\": {\n                \"event_id\": 1,\n                \"material_id\": 3,\n                \"quantity\": 1\n            }\n        },\n        {\n            \"id\": 5,\n            \"name\": \"Chevin Q6 (4 ch.)\",\n            \"description\": \"Un ampli 4 canaux bien sympa\",\n            \"reference\": \"AMPQ6\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 3,\n            \"rental_price\": 10.25,\n            \"stock_quantity\": 2,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 580,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"park\": {\n                \"id\": 1,\n                \"name\": \"default\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"Son\"\n            },\n            \"sub_category\": {\n                \"id\": 3,\n                \"name\": \"Amplificateurs\",\n                \"category_id\": 1\n            },\n            \"attributes\": [],\n            \"pivot\": {\n                \"event_id\": 1,\n                \"material_id\": 5,\n                \"quantity\": 1\n            }\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Micro SM58\",\n            \"description\": \"Le micro de toutes les situations !\",\n            \"reference\": \"SM58\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 18,\n            \"rental_price\": 8,\n            \"stock_quantity\": 16,\n            \"out_of_order_quantity\": 1,\n            \"replacement_price\": 200,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"park\": {\n                \"id\": 1,\n                \"name\": \"default\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"Son\"\n            },\n            \"sub_category\": {\n                \"id\": 18,\n                \"name\": \"Micros\",\n                \"category_id\": 1\n            },\n            \"attributes\": [],\n            \"pivot\": {\n                \"event_id\": 1,\n                \"material_id\": 7,\n                \"quantity\": 1\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_id\": 1,\n    \"title\": \"C'est noël\",\n    \"start_date\": \"2018-12-24 00:00:00\",\n    \"end_date\": \"2018-12-25 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Dijon, France\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{robert2_url}}/events/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"user_id\": 1,\n    \"title\": \"C'est noël\",\n    \"description\": null,\n    \"start_date\": \"2018-12-24 00:00:00\",\n    \"end_date\": \"2018-12-25 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Dijon, France\",\n    \"user\": {\n        \"id\": 2,\n        \"pseudo\": \"newuser\",\n        \"email\": \"newuser@robertmanager.org\",\n        \"group_id\": \"member\",\n        \"person\": {\n            \"id\": 3,\n            \"user_id\": 2,\n            \"first_name\": \"Member\",\n            \"last_name\": \"Test\",\n            \"nickname\": null,\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2019-01-13 12:15:01\",\n            \"updated_at\": \"2019-01-13 12:15:01\",\n            \"deleted_at\": null,\n            \"full_name\": \"Test Member\",\n            \"country\": null\n        }\n    },\n    \"beneficiaries\": [],\n    \"assignees\": [],\n    \"materials\": [],\n    \"created_at\": \"2018-12-31 12:42:12\",\n    \"updated_at\": \"2018-12-31 16:25:15\",\n    \"deleted_at\": null\n}"
						}
					]
				},
				{
					"name": "Get all events",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e069c7-17d9-4603-a6b9-ca13f4bf0500",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/events",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"events"
							]
						},
						"description": "Retreive all the events in the application, sorted by start date, and within pagination."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/events?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/events?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/events\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 2,\n        \"total\": 2\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            \"user_id\": 1,\n            \"title\": \"C'est noël\",\n            \"description\": null,\n            \"start_date\": \"2018-12-24 00:00:00\",\n            \"end_date\": \"2018-12-25 23:59:59\",\n            \"is_confirmed\": true,\n            \"location\": \"Dijon, France\",\n            \"created_at\": \"2018-12-31 12:42:12\",\n            \"updated_at\": \"2018-12-31 16:25:15\",\n            \"deleted_at\": null\n        },\n        {\n            \"id\": 2,\n            \"user_id\": 1,\n            \"title\": \"Nouvel an\",\n            \"description\": null,\n            \"start_date\": \"2018-12-31 00:00:00\",\n            \"end_date\": \"2019-01-01 23:59:59\",\n            \"is_confirmed\": true,\n            \"location\": \"Marseille\",\n            \"created_at\": \"2018-12-31 16:22:00\",\n            \"updated_at\": \"2018-12-31 16:22:00\",\n            \"deleted_at\": null\n        }\n    ]\n}"
						},
						{
							"name": "Soft deleted only",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events?deleted=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "deleted",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/events?deleted=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/events?deleted=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/events\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"user_id\": 1,\n            \"title\": \"Soft deleted\",\n            \"description\": null,\n            \"start_date\": \"2018-12-31 00:00:00\",\n            \"end_date\": \"2019-01-01 23:59:59\",\n            \"is_confirmed\": true,\n            \"location\": \"Lyon\",\n            \"created_at\": \"2019-01-13 11:45:48\",\n            \"updated_at\": \"2019-01-13 11:46:04\",\n            \"deleted_at\": \"2019-01-13 11:46:04\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get one event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/events/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"events",
								"1"
							]
						},
						"description": "Retreive one event with all informations: its _User and Person_ creator's data, all its _Materials_ (with quantity assigned in pivot), and its _Assignees_ and _Beneficiaries_."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"user_id\": 1,\n    \"title\": \"C'est noël\",\n    \"description\": null,\n    \"start_date\": \"2018-12-24 00:00:00\",\n    \"end_date\": \"2018-12-25 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Dijon, France\",\n    \"created_at\": \"2018-12-31 12:42:12\",\n    \"updated_at\": \"2018-12-31 16:25:15\",\n    \"deleted_at\": null,\n    \"user\": {\n        \"id\": 2,\n        \"pseudo\": \"member\",\n        \"email\": \"crew-member@robertmanager.org\",\n        \"group_id\": \"member\",\n        \"person\": {\n            \"id\": 2,\n            \"user_id\": 2,\n            \"first_name\": \"Member\",\n            \"last_name\": \"Technician\",\n            \"nickname\": null,\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-26 23:05:53\",\n            \"updated_at\": \"2018-12-26 23:05:53\",\n            \"deleted_at\": null,\n            \"full_name\": \"Technician Member\",\n            \"country\": null\n        }\n    },\n    \"assignees\": [\n        {\n            \"id\": 2,\n            \"first_name\": \"Member\",\n            \"last_name\": \"Technician\",\n            \"nickname\": null,\n            \"full_name\": \"Technician Member\",\n            \"country\": null,\n            \"pivot\": {\n                \"event_id\": \"1\",\n                \"person_id\": \"2\"\n            }\n        }\n    ],\n    \"beneficiaries\": [\n        {\n            \"id\": 3,\n            \"first_name\": \"Customer\",\n            \"last_name\": \"Client\",\n            \"full_name\": \"Client Customer\",\n            \"country\": null,\n            \"pivot\": {\n                \"event_id\": \"1\",\n                \"person_id\": \"3\"\n            }\n        }\n    ],\n    \"materials\": [\n        {\n            \"id\": 2,\n            \"name\": \"New matos\",\n            \"description\": \"Nouveau matos de ouf\",\n            \"reference\": \"newmatos01\",\n            \"park_id\": 1,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 525,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"tags\": [],\n    \t\t\"attributes\": [],\n            \"pivot\": {\n                \"event_id\": 1,\n                \"material_id\": 2,\n                \"quantity\": 1\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get event's missing materials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/events/6/missing-materials",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"events",
								"6",
								"missing-materials"
							]
						},
						"description": "Retreive the missing materials for the period of an event. This is usefull to know what materials must be aquired before the event begins."
					},
					"response": [
						{
							"name": "Success (2 missing materials)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/6/missing-materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"6",
										"missing-materials"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 242,\n        \"name\": \"1 16Amono male vers1 pc 16A femelle\",\n        \"description\": null,\n        \"reference\": \"adaptri camping 16mono-PC16\",\n        \"park_id\": 1,\n        \"category_id\": 2,\n        \"sub_category_id\": null,\n        \"rental_price\": 1,\n        \"stock_quantity\": 7,\n        \"out_of_order_quantity\": 0,\n        \"replacement_price\": 30,\n        \"serial_number\": null,\n        \"is_hidden_on_bill\": false,\n        \"is_discountable\": true,\n        \"tags\": [],\n        \"attributes\": [],\n        \"pivot\": {\n            \"event_id\": 6,\n            \"material_id\": 242,\n            \"quantity\": 7\n        },\n        \"remaining_quantity\": -4\n    },\n    {\n        \"id\": 241,\n        \"name\": \"1 32Amono male vers 2 pc 16A femelle\",\n        \"description\": null,\n        \"reference\": \"adaptri 32mono-2xPC16\",\n        \"park_id\": 1,\n        \"category_id\": 2,\n        \"sub_category_id\": null,\n        \"rental_price\": 0.1,\n        \"stock_quantity\": 2,\n        \"out_of_order_quantity\": 0,\n        \"replacement_price\": 30,\n        \"serial_number\": null,\n        \"is_hidden_on_bill\": false,\n        \"is_discountable\": true,\n        \"tags\": [\n            {\n                \"id\": 1,\n                \"name\": \"Tout neuf\"\n            }\n        ],\n        \"attributes\": [],\n        \"pivot\": {\n            \"event_id\": 6,\n            \"material_id\": 241,\n            \"quantity\": 1\n        },\n        \"remaining_quantity\": -1\n    }\n]"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/999/missing-materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"999",
										"missing-materials"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"requested\": \"(GET) http://robert2-api.nostromo/api/events/999/missing-materials\",\n        \"code\": 404,\n        \"message\": \"The required resource was not found.\",\n        \"file\": \"/home/polo/WEB/perso/Robert2-api/src/App/Controllers/EventController.php, line 63.\"\n    }\n}"
						},
						{
							"name": "Success (no missing materials)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/1/missing-materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"1",
										"missing-materials"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "Delete an event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60fb98e8-8136-4212-a101-b14d46cf10b3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/events/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"events",
								"1"
							]
						},
						"description": "Remove an event using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"user_id\": 1,\n    \"title\": \"C'est noël\",\n    \"description\": null,\n    \"start_date\": \"2018-12-24 00:00:00\",\n    \"end_date\": \"2018-12-25 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Dijon, France\",\n    \"created_at\": \"2018-12-31 12:42:12\",\n    \"updated_at\": \"2018-12-31 16:40:27\",\n    \"deleted_at\": \"2018-12-31 16:40:27\"\n}"
						},
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						}
					]
				},
				{
					"name": "Restore an event",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "012c9212-c04d-4da7-88e8-ec40e4f3e416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/events/restore/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"events",
								"restore",
								"1"
							]
						},
						"description": "Restore an event that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/events/restore/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"events",
										"restore",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"user_id\": 1,\n    \"title\": \"Soft deleted\",\n    \"description\": null,\n    \"start_date\": \"2018-12-31 00:00:00\",\n    \"end_date\": \"2019-01-01 23:59:59\",\n    \"is_confirmed\": true,\n    \"location\": \"Lyon\",\n    \"created_at\": \"2019-01-13 11:45:48\",\n    \"updated_at\": \"2019-01-13 16:37:26\",\n    \"deleted_at\": null\n}"
						}
					]
				}
			],
			"description": "Events are the main entity of the application. An event is defined by a title, a start date and an end date. An event can contain several _Materials_, as well as people: _Assignees_ are the workers, and _Beneficiaries_ are the clients (both refer to the 'Person' entity).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "56ad20ef-88e0-4d53-a1cc-dd9dc33faa66",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "06edfed2-f997-4560-b98b-a5a20f1268d3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Materials",
			"item": [
				{
					"name": "Create material",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Yamaha PM5D\",\n    \"reference\": \"PM5D\",\n    \"description\": \"Big numeric mixing console\",\n    \"park_id\": 1,\n    \"category_id\": 1,\n    \"sub_category_id\": 1,\n    \"rental_price\": 10,\n    \"stock_quantity\": 5,\n    \"replacement_price\": 525,\n    \"tags\": [\"Brand new\"]\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/materials",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"materials"
							]
						},
						"description": "To create a material, all the following fields are required:\n\n- `name`\n- `reference`\n- `description`\n- `park_id`\n- `category_id`\n- `rental_price`\n- `stock_quantity`\n- `replacement_price`\n\nNote that we can create _Tags_ and associate them directly to the newly created material."
					},
					"response": [
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"N\",\n    \"reference\": \"N\",\n    \"description\": \"Big numeric mixing console\",\n    \"park_id\": \"noPark\",\n    \"category_id\": \"noCateg\",\n    \"sub_category_id\": \"noSubCateg\",\n    \"rental_price\": \"invalid\",\n    \"stock_quantity\": \"invalid\",\n    \"replacement_price\": \"invalid\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"name\": [\n                \"name must have a length between 2 and 255\"\n            ],\n            \"reference\": [\n                \"reference must have a length between 2 and 64\"\n            ],\n            \"park_id\": [\n                \"park_id must be numeric\"\n            ],\n            \"category_id\": [\n                \"category_id must be numeric\"\n            ],\n            \"sub_category_id\": [\n                \"sub_category_id must be numeric\"\n            ],\n            \"rental_price\": [\n                \"rental_price must be a float number\"\n            ],\n            \"stock_quantity\": [\n                \"stock_quantity must be an integer number\"\n            ],\n            \"replacement_price\": [\n                \"replacement_price must be a float number\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Error - Material already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New matos\",\n    \"reference\": \"newmatos01\",\n    \"description\": \"Nouveau matos de ouf\",\n    \"park_id\": 1,\n    \"category_id\": 1,\n    \"rental_price\": 10,\n    \"stock_quantity\": 5,\n    \"replacement_price\": 525,\n    \"tags\": [\"Brand new\"]\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": []\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Yamaha PM5D\",\n    \"reference\": \"PM5D\",\n    \"description\": \"Big numeric mixing console\",\n    \"park_id\": 1,\n    \"category_id\": 1,\n    \"sub_category_id\": 1,\n    \"rental_price\": 10,\n    \"stock_quantity\": 5,\n    \"replacement_price\": 5250,\n    \"tags\": [\"Brand new\"]\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"Yamaha PM5D\",\n    \"reference\": \"PM5D\",\n    \"description\": \"Big numeric mixing console\",\n    \"park_id\": 1,\n    \"category_id\": 1,\n    \"sub_category_id\": 1,\n    \"rental_price\": 10,\n    \"stock_quantity\": 5,\n    \"replacement_price\": 5250,\n    \"is_hidden_on_bill\": false,\n    \"is_discountable\": true,\n    \"updated_at\": \"2018-12-31 16:49:31\",\n    \"created_at\": \"2018-12-31 16:49:31\",\n    \"id\": 4,\n    \"park\": {\n        \"id\": 1,\n        \"name\": \"default\"\n    },\n    \"category\": {\n        \"id\": 1,\n        \"name\": \"sound\"\n    },\n    \"sub_category\": {\n        \"id\": 1,\n        \"name\": \"Mix\",\n        \"category_id\": 1\n    },\n    \"attributes\": []\n}"
						}
					]
				},
				{
					"name": "Update material",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Console Yamaha PM5D\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/materials/4",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"materials",
								"4"
							]
						},
						"description": "Modify material informations."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Console Yamaha PM5D\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/materials/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"N\",\n    \"reference\": \"N\",\n    \"description\": \"Big numeric mixing console\",\n    \"park_id\": \"noPark\",\n    \"category_id\": \"noCateg\",\n    \"sub_category_id\": \"noSubCateg\",\n    \"rental_price\": \"invalid\",\n    \"stock_quantity\": \"invalid\",\n    \"replacement_price\": \"invalid\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/materials/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"name\": [\n                \"name must have a length between 2 and 255\"\n            ],\n            \"reference\": [\n                \"reference must have a length between 2 and 64\"\n            ],\n            \"park_id\": [\n                \"park_id must be numeric\"\n            ],\n            \"category_id\": [\n                \"category_id must be numeric\"\n            ],\n            \"sub_category_id\": [\n                \"sub_category_id must be numeric\"\n            ],\n            \"rental_price\": [\n                \"rental_price must be a float number\"\n            ],\n            \"stock_quantity\": [\n                \"stock_quantity must be an integer number\"\n            ],\n            \"replacement_price\": [\n                \"replacement_price must be a float number\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Console Yamaha PM5D\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/materials/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Console Yamaha PM5D\",\n    \"description\": \"Big numeric mixing console\",\n    \"reference\": \"PM5D\",\n    \"park_id\": 1,\n    \"category_id\": 1,\n    \"sub_category_id\": 1,\n    \"rental_price\": 10,\n    \"stock_quantity\": 5,\n    \"out_of_order_quantity\": null,\n    \"replacement_price\": 5250,\n    \"serial_number\": null,\n    \"is_hidden_on_bill\": false,\n    \"is_discountable\": true,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 16:49:31\",\n    \"updated_at\": \"2018-12-31 16:52:07\",\n    \"deleted_at\": null,\n    \"park\": {\n        \"id\": 1,\n        \"name\": \"default\"\n    },\n    \"category\": {\n        \"id\": 1,\n        \"name\": \"sound\"\n    },\n    \"sub_category\": {\n        \"id\": 1,\n        \"name\": \"Mix\",\n        \"category_id\": 1\n    },\n    \"attributes\": []\n}"
						}
					]
				},
				{
					"name": "Get all materials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e069c7-17d9-4603-a6b9-ca13f4bf0500",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/materials?whileEvent=1&search=&limit=100&ascending=1&page=1&byColumn=0&orderBy=name&park=1&category=2&subCategory=8&onlySelectedInEvent=1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"materials"
							],
							"query": [
								{
									"key": "whileEvent",
									"value": "1"
								},
								{
									"key": "search",
									"value": ""
								},
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "ascending",
									"value": "1"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "byColumn",
									"value": "0"
								},
								{
									"key": "orderBy",
									"value": "name"
								},
								{
									"key": "park",
									"value": "1"
								},
								{
									"key": "category",
									"value": "2"
								},
								{
									"key": "subCategory",
									"value": "8"
								},
								{
									"key": "onlySelectedInEvent",
									"value": "1"
								}
							]
						},
						"description": "Retreive all materials of the application, with their related _tags_, and _custom attributes_. The results are paginated, and it's possible to filter and sort them, as well as apply a search term."
					},
					"response": [
						{
							"name": "Success with search term and order by name",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials?search=ampli&orderBy=name&ascending=1&page=1&limit=100",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials"
									],
									"query": [
										{
											"key": "search",
											"value": "ampli"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "ascending",
											"value": "1"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/materials?search=ampli&orderBy=name&ascending=1&limit=100&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/materials?search=ampli&orderBy=name&ascending=1&limit=100&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/materials\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 16,\n        \"total\": 16\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"name\": \"Ampli 4 voies Chevin Q6\",\n            \"description\": null,\n            \"reference\": \"Amp Q6\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 3,\n            \"rental_price\": 30,\n            \"stock_quantity\": 3,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 2800,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:50\",\n            \"updated_at\": \"2019-10-20 23:46:37\",\n            \"deleted_at\": null,\n            \"tags\": [\n                {\n                    \"id\": 7,\n                    \"name\": \"Vieux matos\"\n                }\n            ],\n            \"attributes\": []\n        },\n        {\n            \"id\": 201,\n            \"name\": \"Ampli Basse Ampeg (baffle + ampli)\",\n            \"description\": null,\n            \"reference\": \"Ampeg\",\n            \"park_id\": 16,\n            \"category_id\": 1,\n            \"sub_category_id\": 3,\n            \"rental_price\": 35,\n            \"stock_quantity\": 1,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 3000,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-20 23:46:52\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 218,\n            \"name\": \"Ampli NXAMP Nexo 4 x 1KW\",\n            \"description\": null,\n            \"reference\": \"NXAMP 4x1\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 40,\n            \"stock_quantity\": 3,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 3000,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-20 19:31:52\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 95,\n            \"name\": \"Ampli NXAMP Nexo 4 x 4 Kx\",\n            \"description\": null,\n            \"reference\": \"NXAmp 4x4\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 80,\n            \"stock_quantity\": 1,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 8000,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:51\",\n            \"updated_at\": \"2019-10-20 19:31:51\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Ampli QSC pour ligne 100V\",\n            \"description\": null,\n            \"reference\": \"Amp 100V\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 3,\n            \"rental_price\": 25,\n            \"stock_quantity\": 1,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 1200,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:50\",\n            \"updated_at\": \"2019-10-20 23:46:28\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 321,\n            \"name\": \"Amplificateur LA8 4 Canaux pour Arc Focus & SB 18 L-Acoustic\",\n            \"description\": null,\n            \"reference\": \"LA8 ampli Arc focus SB 18\",\n            \"park_id\": 11,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 40,\n            \"stock_quantity\": 2,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 5000,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:53\",\n            \"updated_at\": \"2019-10-20 19:31:53\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 209,\n            \"name\": \"Amplifié L-Acoustics MTD 108P\",\n            \"description\": null,\n            \"reference\": \"MTD108P\",\n            \"park_id\": 11,\n            \"category_id\": 1,\n            \"sub_category_id\": 2,\n            \"rental_price\": 37,\n            \"stock_quantity\": 4,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 3000,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-20 23:49:50\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 174,\n            \"name\": \"Amplifiée L-Acoustics MTD112p\",\n            \"description\": null,\n            \"reference\": \"MTD112P\",\n            \"park_id\": 11,\n            \"category_id\": 1,\n            \"sub_category_id\": 2,\n            \"rental_price\": 37,\n            \"stock_quantity\": 2,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 3000,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:51\",\n            \"updated_at\": \"2019-10-20 23:50:11\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 207,\n            \"name\": \"Enceinte amplifiée Béta3 (the box pa502a)\",\n            \"description\": null,\n            \"reference\": \"Beta3 \",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 20,\n            \"stock_quantity\": 2,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 500,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-20 19:31:52\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 279,\n            \"name\": \"Enceinte amplifiée de retour DB Technology FM12\",\n            \"description\": null,\n            \"reference\": \"FM12\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 20,\n            \"stock_quantity\": 6,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 500,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-20 19:31:52\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 313,\n            \"name\": \"Enceinte Amplifiée Façade Meyer Sound CQ1-P\",\n            \"description\": null,\n            \"reference\": \"Meyer CQ1-P\",\n            \"park_id\": 13,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 70,\n            \"stock_quantity\": 2,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 3000,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-20 19:31:52\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 311,\n            \"name\": \"Enceinte Amplifiée Façade Meyer Sound UPA-1P\",\n            \"description\": null,\n            \"reference\": \"Meyer UPA-1P\",\n            \"park_id\": 13,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 50,\n            \"stock_quantity\": 4,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 2200,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-20 19:31:52\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 157,\n            \"name\": \"Enceinte amplifiée JBL PRX615\",\n            \"description\": null,\n            \"reference\": \"PRX615\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 25,\n            \"stock_quantity\": 8,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 900,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:51\",\n            \"updated_at\": \"2019-10-20 19:31:51\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 205,\n            \"name\": \"enceinte amplifiée Mackie\",\n            \"description\": null,\n            \"reference\": \"Mackie \",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 15,\n            \"stock_quantity\": 2,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 500,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-20 19:31:52\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 210,\n            \"name\": \"Sub Amplifié L-Acoustics MTD 15P\",\n            \"description\": null,\n            \"reference\": \"MTD15P\",\n            \"park_id\": 11,\n            \"category_id\": 1,\n            \"sub_category_id\": 2,\n            \"rental_price\": 37,\n            \"stock_quantity\": 2,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 3000,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-24 12:35:47\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": []\n        },\n        {\n            \"id\": 309,\n            \"name\": \"Wedge db Technologies 12\\\" Coaxiale Amplifiée 300w\",\n            \"description\": null,\n            \"reference\": \"Wedge FM12\",\n            \"park_id\": 13,\n            \"category_id\": 1,\n            \"sub_category_id\": 2,\n            \"rental_price\": 25,\n            \"stock_quantity\": 10,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 500,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-10-24 02:16:36\",\n            \"deleted_at\": null,\n            \"tags\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"Tout neuf\"\n                }\n            ],\n            \"attributes\": []\n        }\n    ]\n}"
						},
						{
							"name": "Soft deleted only",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials?deleted=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials"
									],
									"query": [
										{
											"key": "deleted",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/materials?deleted=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/materials?deleted=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/materials\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"name\": \"Yamaha M7CL\",\n            \"description\": \"Big great numeric mixing console\",\n            \"reference\": \"M7CL\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 525,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": \"Removed from park because it was sold.\",\n            \"created_at\": \"2019-01-13 11:56:45\",\n            \"updated_at\": \"2019-01-13 11:56:56\",\n            \"deleted_at\": \"2019-01-13 11:56:56\",\n            \"tags\": [],\n    \t\t\"attributes\": []\n        }\n    ]\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/materials?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/materials?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/materials\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 2,\n        \"total\": 2\n    },\n    \"data\": [\n        {\n            \"id\": 2,\n            \"name\": \"Console Yamaha PM5D\",\n            \"description\": \"Big numeric mixing console\",\n            \"reference\": \"PM5D\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 1,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 5250,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 16:49:31\",\n            \"updated_at\": \"2018-12-31 16:52:07\",\n            \"deleted_at\": null,\n            \"tags\": [],\n    \t\t\"attributes\": []\n        },\n        {\n            \"id\": 1,\n            \"name\": \"New matos\",\n            \"description\": \"Nouveau matos de ouf\",\n            \"reference\": \"newmatos01\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 525,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 01:02:12\",\n            \"updated_at\": \"2018-12-31 01:02:12\",\n            \"deleted_at\": null,\n            \"tags\": [],\n    \t\t\"attributes\": []\n        }\n    ]\n}"
						},
						{
							"name": "Success with all filters active",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials?whileEvent=1&search=tri&limit=100&ascending=1&page=1&byColumn=0&orderBy=name&park=1&category=2&subCategory=8&onlySelectedInEvent=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials"
									],
									"query": [
										{
											"key": "whileEvent",
											"value": "1"
										},
										{
											"key": "search",
											"value": "tri"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "ascending",
											"value": "1"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "byColumn",
											"value": "0"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "park",
											"value": "1"
										},
										{
											"key": "category",
											"value": "2"
										},
										{
											"key": "subCategory",
											"value": "8"
										},
										{
											"key": "onlySelectedInEvent",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/materials?whileEvent=1&search=tri&limit=100&ascending=1&byColumn=0&orderBy=name&park=1&category=2&subCategory=8&onlySelectedInEvent=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/materials?whileEvent=1&search=tri&limit=100&ascending=1&byColumn=0&orderBy=name&park=1&category=2&subCategory=8&onlySelectedInEvent=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/materials\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 238,\n            \"name\": \"adapt tri p17 32Aagricole male vers p17 32 femelle\",\n            \"description\": null,\n            \"reference\": \"adaptri 32agric-32\",\n            \"park_id\": 1,\n            \"category_id\": 2,\n            \"sub_category_id\": 8,\n            \"rental_price\": 0.1,\n            \"stock_quantity\": 1,\n            \"out_of_order_quantity\": 0,\n            \"replacement_price\": 30,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2019-10-20 19:31:52\",\n            \"updated_at\": \"2019-11-26 23:20:32\",\n            \"deleted_at\": null,\n            \"tags\": [],\n            \"attributes\": [],\n            \"remaining_quantity\": 1\n        }\n    ]\n}"
						},
						{
							"name": "Success with remaining quantities for an event's period",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials?whileEvent=6",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials"
									],
									"query": [
										{
											"key": "whileEvent",
											"value": "6"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/materials?whileEvent=6&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/materials?whileEvent=6&page=1\",\n        \"next_page_url\": \"/api/materials?whileEvent=6&page=1\",\n        \"path\": \"/api/materials\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 2,\n        \"total\": 2\n    },\n    \"data\": [\n        {\n            \"id\": 2,\n            \"name\": \"Console Yamaha PM5D\",\n            \"description\": \"Big numeric mixing console\",\n            \"reference\": \"PM5D\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 1,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 5250,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 16:49:31\",\n            \"updated_at\": \"2018-12-31 16:52:07\",\n            \"deleted_at\": null,\n            \"tags\": [],\n    \t\t\"attributes\": [],\n            \"remaining_quantity\": 1\n        },\n        {\n            \"id\": 1,\n            \"name\": \"New matos\",\n            \"description\": \"Nouveau matos de ouf\",\n            \"reference\": \"newmatos01\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 525,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n        \t\"is_discountable\": true,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 01:02:12\",\n            \"updated_at\": \"2018-12-31 01:02:12\",\n            \"deleted_at\": null,\n            \"tags\": [],\n    \t\t\"attributes\": [],\n            \"remaining_quantity\": 5\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get one material",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/materials/4",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"materials",
								"4"
							]
						},
						"description": "Retreive one material by its ID, with all its related informations."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Console Yamaha PM5D\",\n    \"description\": \"Big numeric mixing console\",\n    \"reference\": \"PM5D\",\n    \"park_id\": 1,\n    \"category_id\": 1,\n    \"sub_category_id\": 1,\n    \"rental_price\": 10,\n    \"stock_quantity\": 5,\n    \"out_of_order_quantity\": null,\n    \"replacement_price\": 5250,\n    \"serial_number\": null,\n    \"is_hidden_on_bill\": false,\n    \"is_discountable\": true,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 16:49:31\",\n    \"updated_at\": \"2018-12-31 16:52:07\",\n    \"deleted_at\": null,\n    \"tags\": [],\n\t\"attributes\": []\n}"
						}
					]
				},
				{
					"name": "Get a material's Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/materials/2/tags",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"materials",
								"2",
								"tags"
							]
						},
						"description": "Retreive the list of all tags associated to a given material."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/2/tags",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"2",
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 4,\n        \"name\": \"Brand new\"\n    }\n]"
						}
					]
				},
				{
					"name": "Delete a material",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60fb98e8-8136-4212-a101-b14d46cf10b3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/materials/5",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"materials",
								"5"
							]
						},
						"description": "Remove a material using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/5",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 5,\n    \"name\": \"A big material\",\n    \"description\": \"Big expensive mixing console\",\n    \"reference\": \"qwertz\",\n    \"park_id\": 1,\n    \"category_id\": 1,\n    \"sub_category_id\": 1,\n    \"rental_price\": 10,\n    \"stock_quantity\": 5,\n    \"out_of_order_quantity\": null,\n    \"replacement_price\": 52,\n    \"serial_number\": null,\n    \"is_hidden_on_bill\": false,\n    \"is_discountable\": true,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 17:02:06\",\n    \"updated_at\": \"2018-12-31 17:02:20\",\n    \"deleted_at\": \"2018-12-31 17:02:20\",\n    \"tags\": [],\n\t\"attributes\": []\n}"
						},
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/5",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						}
					]
				},
				{
					"name": "Restore a material",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "012c9212-c04d-4da7-88e8-ec40e4f3e416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/materials/restore/1",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"materials",
								"restore",
								"1"
							]
						},
						"description": "Restore a material that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/restore/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"restore",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Yamaha M7CL\",\n    \"description\": \"Big great numeric mixing console\",\n    \"reference\": \"M7CL\",\n    \"park_id\": 1,\n    \"category_id\": 1,\n    \"sub_category_id\": null,\n    \"rental_price\": 10,\n    \"stock_quantity\": 5,\n    \"out_of_order_quantity\": null,\n    \"replacement_price\": 525,\n    \"serial_number\": null,\n    \"is_hidden_on_bill\": false,\n    \"is_discountable\": true,\n    \"note\": null,\n    \"created_at\": \"2019-01-13 11:56:45\",\n    \"updated_at\": \"2019-01-13 16:39:35\",\n    \"deleted_at\": null,\n    \"tags\": [],\n\t\"attributes\": []\n}"
						}
					]
				}
			],
			"description": "Materials are the foundation of the application. It's basically what's gonna be rented. A material is defined by a name, a rental price and a stock quantity. It belongs to a _Park_, a _Category_ and an optional _Sub category_. It can be linked to several _Events_ and _Tags_.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f8eca76b-d7df-4792-af50-3e086bfb51df",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "03e2a711-8e6f-486e-a899-61601b68a2dd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Attributes",
			"item": [
				{
					"name": "Create attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Poids\",\n\t\"type\": \"integer\",\n\t\"unit\": \"kg\",\n\t\"max_length\": null\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/attributes",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"attributes"
							]
						},
						"description": "To create a material attribute, the following fields are required:\n\n- `name`\n- `type` (must be one of `integer`, `float`, `string`, or `boolean`)\n\nThe fields `unit` and `max_length` are optionnal, and the field `max_length` is only usefull for _string type_."
					},
					"response": [
						{
							"name": "Unhautorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Poids\",\n\t\"type\": \"integer\",\n\t\"unit\": \"kg\",\n\t\"max_length\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{robert2_url}}/attributes",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Unauthorized by ACL: users of group 'member' are not allowed to access this API endpoint.\"\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Poids\",\n    \"type\": \"integer\",\n    \"unit\": \"kg\",\n    \"max_length\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{robert2_url}}/attributes",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"Poids\",\n    \"type\": \"integer\",\n    \"unit\": \"kg\",\n    \"max_length\": null,\n    \"updated_at\": \"2019-12-19 23:18:31\",\n    \"created_at\": \"2019-12-19 23:18:31\"\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Poids\",\n\t\"type\": \"not-valid\",\n\t\"unit\": \"kg\",\n\t\"max_length\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{robert2_url}}/attributes",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"attributes"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"code\": 400,\n        \"message\": \"Validation failed. See error[details] for more informations.\",\n        \"details\": {\n            \"type\": [\n                \"At least one of these rules must pass for type\",\n                \"type must be equals \\\"string\\\"\",\n                \"type must be equals \\\"integer\\\"\",\n                \"type must be equals \\\"float\\\"\",\n                \"type must be equals \\\"boolean\\\"\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get all attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e069c7-17d9-4603-a6b9-ca13f4bf0500",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/materials/attributes",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"materials",
								"attributes"
							]
						},
						"description": "Retreive all material's custom attributes. This is usefull to construct a form allowing to edit materials."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/materials/attributes",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"materials",
										"attributes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Puissance\",\n        \"type\": \"float\",\n        \"unit\": \"W\",\n        \"max_length\": null,\n        \"created_at\": \"2019-12-18 00:13:24\",\n        \"updated_at\": \"2019-12-18 00:13:24\",\n        \"deleted_at\": null\n    },\n    {\n        \"id\": 1,\n        \"name\": \"Poids\",\n        \"type\": \"integer\",\n        \"unit\": \"kg\",\n        \"max_length\": null,\n        \"created_at\": \"2019-12-19 23:18:31\",\n        \"updated_at\": \"2019-12-19 23:18:31\",\n        \"deleted_at\": null\n    }\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Parks",
			"item": [
				{
					"name": "Create park",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Park\"\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/parks",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"parks"
							]
						},
						"description": "Just give a name, and park is added!"
					},
					"response": [
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/parks",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"name\": [\n                \"name must not be empty\",\n                \"name must contain only letters (a-z)\",\n                \"name must have a length between 4 and 96\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New Park\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/parks",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"New Park\",\n    \"updated_at\": \"2018-12-31 17:14:55\",\n    \"created_at\": \"2018-12-31 17:14:55\"\n}"
						},
						{
							"name": "Error - Park already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New Park\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/parks",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 31 Dec 2018 16:13:57 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.29 (Ubuntu)"
								},
								{
									"key": "Content-Length",
									"value": "470"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5, max=99"
								},
								{
									"key": "Connection",
									"value": "Keep-Alive"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": []\n    }\n}"
						}
					]
				},
				{
					"name": "Update park",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Modified Park\"\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/parks/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"parks",
								"2"
							]
						},
						"description": "Modify a park's name."
					},
					"response": [
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Modified Park\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/parks/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"2"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"name\": [\n                \"name must not be empty\",\n                \"name must contain only letters (a-z)\",\n                \"name must have a length between 4 and 96\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Modified Park\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/parks/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Modified Park\",\n    \"created_at\": \"2018-12-31 17:14:55\",\n    \"updated_at\": \"2018-12-31 17:16:59\",\n    \"deleted_at\": null\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Modified Park\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/parks/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get all parks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e069c7-17d9-4603-a6b9-ca13f4bf0500",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/parks",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"parks"
							]
						},
						"description": "Retreive all the parks in the application, sorted by start date, and within pagination."
					},
					"response": [
						{
							"name": "Soft deleted only",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks?deleted=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks"
									],
									"query": [
										{
											"key": "deleted",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/parks?deleted=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/parks?deleted=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/parks\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 2,\n            \"name\": \"Old Park (destroyed)\",\n            \"created_at\": \"2019-01-13 12:11:02\",\n            \"updated_at\": \"2019-01-13 12:11:07\",\n            \"deleted_at\": \"2019-01-13 12:11:07\"\n        }\n    ]\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/parks?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/parks?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/parks\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 2,\n        \"total\": 2\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"default\",\n            \"created_at\": null,\n            \"updated_at\": null,\n            \"deleted_at\": null\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Modified Park\",\n            \"created_at\": \"2018-12-31 17:14:55\",\n            \"updated_at\": \"2018-12-31 17:16:59\",\n            \"deleted_at\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get one park",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/parks/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"parks",
								"2"
							]
						},
						"description": "Retreive one park."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Modified Park\",\n    \"created_at\": \"2018-12-31 17:14:55\",\n    \"updated_at\": \"2018-12-31 17:16:59\",\n    \"deleted_at\": null\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get a park's materials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/parks/1/materials",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"parks",
								"1",
								"materials"
							]
						},
						"description": "Retreive the list of all the materials that are associated to the given park."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks/1/materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"1",
										"materials"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/parks/1/materials?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/parks/1/materials?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/parks/1/materials\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 2,\n        \"total\": 2\n    },\n    \"data\": [\n        {\n            \"id\": 2,\n            \"name\": \"New matos\",\n            \"description\": \"Nouveau matos de ouf\",\n            \"reference\": \"newmatos01\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 525,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 01:02:12\",\n            \"updated_at\": \"2018-12-31 01:02:12\",\n            \"deleted_at\": null,\n            \"park\": {\n                \"id\": 1,\n                \"name\": \"default\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"sound\"\n            },\n            \"sub_category\": null\n        },\n        {\n            \"id\": 1,\n            \"name\": \"Console Yamaha PM5D\",\n            \"description\": \"Big numeric mixing console\",\n            \"reference\": \"PM5D\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": 1,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 5250,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 16:49:31\",\n            \"updated_at\": \"2018-12-31 16:52:07\",\n            \"deleted_at\": null,\n            \"park\": {\n                \"id\": 1,\n                \"name\": \"default\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"sound\"\n            },\n            \"sub_category\": {\n                \"id\": 1,\n                \"name\": \"Mix\",\n                \"category_id\": 1\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete a park",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60fb98e8-8136-4212-a101-b14d46cf10b3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/parks/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"parks",
								"2"
							]
						},
						"description": "Remove a park using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database.\n\n__WARNING__: This will remove __all materials__ associated to the deleted park!"
					},
					"response": [
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"Modified Park\",\n    \"created_at\": \"2018-12-31 17:14:55\",\n    \"updated_at\": \"2018-12-31 17:23:02\",\n    \"deleted_at\": \"2018-12-31 17:23:02\"\n}"
						},
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Restore a park",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "012c9212-c04d-4da7-88e8-ec40e4f3e416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/parks/restore/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"parks",
								"restore",
								"2"
							]
						},
						"description": "Restore a park that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks/restore/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"restore",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"New Park\",\n    \"created_at\": \"2019-01-13 12:11:02\",\n    \"updated_at\": \"2019-01-13 16:40:42\",\n    \"deleted_at\": null\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/parks/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"parks",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "A _Park_ is basically a set of _Materials_. It's defined by just a name. The application must always have at least one park in its database, because all materials necessarily belong to a park.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1d400e3e-cb68-4207-b504-4f107fdeaba7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "85532ec5-147b-425f-b49e-ef84d8e5cb44",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Persons",
			"item": [
				{
					"name": "Create person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60fb98e8-8136-4212-a101-b14d46cf10b3",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\": \"Jean\",\n\t\"last_name\": \"Destroy\",\n\t\"nickname\": \"to-be-deleted\",\n\t\"tags\": [\"Emmerdeur\"]\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/persons",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"persons"
							]
						},
						"description": "To create a person, the following fields are required:\n\n- `first_name`\n- `last_name`\n- `nickname`\n\nNote that we can create _Tags_ and associate them directly to the newly created person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\": \"Jean\",\n\t\"last_name\": \"Destroy\",\n\t\"nickname\": \"to-be-deleted\",\n\t\"tags\": [\"Emmerdeur\"]\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/persons",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"first_name\": \"Member\",\n    \"last_name\": \"Test\",\n    \"nickname\": \"to-be-deleted\",\n    \"updated_at\": \"2018-12-31 17:27:11\",\n    \"created_at\": \"2018-12-31 17:27:11\",\n    \"full_name\": \"Test Member\",\n    \"country\": null\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\"  : \"\",\n\t\"last_name\"   : \"\",\n    \"email\"       : \"invalid\",\n    \"phone\"       : \"invalid\",\n    \"street\"      : \"\",\n    \"postal_code\" : \"12345678910\",\n    \"locality\"    : \"\",\n    \"country_id\"  : \"invalid\",\n    \"company_id\"  : \"invalid\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/persons",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"first_name\": [\n                \"first_name must not be empty\",\n                \"first_name must contain only letters (a-z) and \\\"\\\"&-_'\\\\\\\",;./\\\\\\\\çàÀâÂäÄèÈéÉêÊëËîÎïÏôÔöÔùÙûÛüÜøØæÆ\\\"\\\"\",\n                \"first_name must have a length between 2 and 96\"\n            ],\n            \"last_name\": [\n                \"last_name must not be empty\",\n                \"last_name must contain only letters (a-z) and \\\"\\\"&-_'\\\\\\\",;./\\\\\\\\çàÀâÂäÄèÈéÉêÊëËîÎïÏôÔöÔùÙûÛüÜøØæÆ\\\"\\\"\",\n                \"last_name must have a length between 2 and 96\"\n            ],\n            \"email\": [\n                \"email must be valid email\"\n            ],\n            \"phone\": [\n                \"phone must be a valid telephone number\"\n            ],\n            \"postal_code\": [\n                \"postal_code must have a length lower than 10\"\n            ],\n            \"country_id\": [\n                \"country_id must be numeric\"\n            ],\n            \"company_id\": [\n                \"company_id must be numeric\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60fb98e8-8136-4212-a101-b14d46cf10b3",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"first_name\": \"Bilbo\",\n\t\"last_name\": \"Baggins\",\n    \"nickname\": \"Bilbus\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/persons/3",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"persons",
								"3"
							]
						},
						"description": "Modify a person's informations."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\": \"Bilbo\",\n\t\"last_name\": \"Baggins\",\n    \"nickname\": \"Bilbus\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/persons/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\": \"Bilbo\",\n\t\"last_name\": \"Baggins\",\n    \"nickname\": \"Bilbus\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/persons/3",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"user_id\": null,\n    \"first_name\": \"Bilbo\",\n    \"last_name\": \"Baggins\",\n    \"nickname\": \"Bilbus\",\n    \"email\": null,\n    \"phone\": null,\n    \"street\": null,\n    \"postal_code\": null,\n    \"locality\": null,\n    \"country_id\": null,\n    \"company_id\": null,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 00:52:53\",\n    \"updated_at\": \"2018-12-31 17:30:21\",\n    \"deleted_at\": null,\n    \"full_name\": \"Baggins Bilbo\",\n    \"country\": null\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\"  : \"\",\n\t\"last_name\"   : \"\",\n    \"email\"       : \"invalid\",\n    \"phone\"       : \"invalid\",\n    \"street\"      : \"\",\n    \"postal_code\" : \"12345678910\",\n    \"locality\"    : \"\",\n    \"country_id\"  : \"invalid\",\n    \"company_id\"  : \"invalid\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/persons/3",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"3"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"first_name\": [\n                \"first_name must not be empty\",\n                \"first_name must contain only letters (a-z) and \\\"\\\"&-_'\\\\\\\",;./\\\\\\\\ÇçàÀâÂäÄèÈéÉêÊëËîÎïÏôÔöÔùÙûÛüÜøØæÆ\\\"\\\"\",\n                \"first_name must have a length between 2 and 96\"\n            ],\n            \"last_name\": [\n                \"last_name must not be empty\",\n                \"last_name must contain only letters (a-z) and \\\"\\\"&-_'\\\\\\\",;./\\\\\\\\ÇçàÀâÂäÄèÈéÉêÊëËîÎïÏôÔöÔùÙûÛüÜøØæÆ\\\"\\\"\",\n                \"last_name must have a length between 2 and 96\"\n            ],\n            \"email\": [\n                \"email must be valid email\"\n            ],\n            \"phone\": [\n                \"phone must be a valid telephone number\"\n            ],\n            \"postal_code\": [\n                \"postal_code must have a length lower than 10\"\n            ],\n            \"country_id\": [\n                \"country_id must be numeric\"\n            ],\n            \"company_id\": [\n                \"company_id must be numeric\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get all persons",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b04cb9a7-3687-45f9-9d58-14bba0ffa77f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/persons",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"persons"
							]
						},
						"description": "Retreive all persons of the application, sorted by last name, and within pagination."
					},
					"response": [
						{
							"name": "Soft deleted only",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons?deleted=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "deleted",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/persons?deleted=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/persons?deleted=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/persons\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 2,\n            \"user_id\": null,\n            \"first_name\": \"Jean\",\n            \"last_name\": \"Destroy\",\n            \"nickname\": \"to-be-deleted\",\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2019-01-13 12:12:13\",\n            \"updated_at\": \"2019-01-13 12:12:29\",\n            \"deleted_at\": \"2019-01-13 12:12:29\",\n            \"full_name\": \"Jean Destroy\",\n            \"country\": null\n        }\n    ]\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/persons?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/persons?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/persons\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 4,\n        \"total\": 4\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"user_id\": null,\n            \"first_name\": \"Bilbo\",\n            \"last_name\": \"Baggins\",\n            \"nickname\": \"Bilbus\",\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 00:52:53\",\n            \"updated_at\": \"2018-12-31 17:32:43\",\n            \"deleted_at\": null,\n            \"full_name\": \"Baggins Bilbo\",\n            \"country\": null\n        },\n        {\n            \"id\": 1,\n            \"user_id\": 1,\n            \"first_name\": \"Admin\",\n            \"last_name\": \"Robertus\",\n            \"nickname\": null,\n            \"email\": \"admin@robertmanager.org\",\n            \"phone\": \"0654321987\",\n            \"street\": \"Rue centrale, 42bis\",\n            \"postal_code\": \"1000\",\n            \"locality\": \"Lausanne\",\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-29 19:12:01\",\n            \"updated_at\": \"2018-12-29 19:12:01\",\n            \"deleted_at\": null,\n            \"full_name\": \"Robertus Admin\",\n            \"country\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get tagged persons",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ea4e9f1-a79f-426f-aa6c-d9e5b5736895",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/persons?tag[]=customer&tag[]=friend",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"persons"
							],
							"query": [
								{
									"key": "tag[]",
									"value": "customer"
								},
								{
									"key": "tag[]",
									"value": "friend"
								}
							]
						},
						"description": "Retreive all persons that have a set of tags, sorted by last name, and within pagination."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons?tag[]=customer&tag[]=friend",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons"
									],
									"query": [
										{
											"key": "tag[]",
											"value": "customer"
										},
										{
											"key": "tag[]",
											"value": "friend"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/persons?tag[]=customer&tag[]=friend&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/persons?tag[]=customer&tag[]=friend&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/persons\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"user_id\": null,\n            \"first_name\": \"Bilbo\",\n            \"last_name\": \"Baggins\",\n            \"nickname\": \"Bilbus\",\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 00:52:53\",\n            \"updated_at\": \"2018-12-31 17:32:43\",\n            \"deleted_at\": null,\n            \"full_name\": \"Baggins Bilbo\",\n            \"country\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get one person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c1d2cd1-6498-4781-ac4d-bb644b39a604",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/persons/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"persons",
								"2"
							]
						},
						"description": "Retreive all informations of a given person."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"user_id\": 2,\n    \"first_name\": \"Admin\",\n    \"last_name\": \"Robertus\",\n    \"nickname\": null,\n    \"email\": \"admin@robertmanager.org\",\n    \"phone\": \"0654321987\",\n    \"street\": \"Rue centrale, 42bis\",\n    \"postal_code\": \"1000\",\n    \"locality\": \"Lausanne\",\n    \"country_id\": null,\n    \"company_id\": null,\n    \"note\": null,\n    \"created_at\": \"2018-12-29 19:12:01\",\n    \"updated_at\": \"2018-12-29 19:12:01\",\n    \"deleted_at\": null,\n    \"full_name\": \"Robertus Admin\",\n    \"country\": null\n}"
						}
					]
				},
				{
					"name": "Get a person's tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/persons/3/tags",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"persons",
								"3",
								"tags"
							]
						},
						"description": "Retreive all tags associated to a given person."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons/3/tags",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"3",
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Customer\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Friend\"\n    }\n]"
						}
					]
				},
				{
					"name": "Delete a person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "60fb98e8-8136-4212-a101-b14d46cf10b3",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/persons/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"persons",
								"2"
							]
						},
						"description": "Remove a person - Well, hum, just in database, huh? :D - using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons/7",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						},
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons/7",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 7,\n    \"user_id\": null,\n    \"first_name\": \"Jean\",\n    \"last_name\": \"Destroy\",\n    \"nickname\": \"to-be-deleted\",\n    \"email\": null,\n    \"phone\": null,\n    \"street\": null,\n    \"postal_code\": null,\n    \"locality\": null,\n    \"country_id\": null,\n    \"company_id\": null,\n    \"note\": null,\n    \"created_at\": \"2018-12-31 17:27:11\",\n    \"updated_at\": \"2018-12-31 17:42:59\",\n    \"deleted_at\": \"2018-12-31 17:42:59\",\n    \"full_name\": \"Destroy Jean\",\n    \"country\": null\n}"
						}
					]
				},
				{
					"name": "Restore a person",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "012c9212-c04d-4da7-88e8-ec40e4f3e416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/persons/restore/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"persons",
								"restore",
								"2"
							]
						},
						"description": "Restore a person that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons/restore/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"restore",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"user_id\": null,\n    \"first_name\": \"Jean\",\n    \"last_name\": \"Destroy\",\n    \"nickname\": \"to-be-deleted\",\n    \"email\": null,\n    \"phone\": null,\n    \"street\": null,\n    \"postal_code\": null,\n    \"locality\": null,\n    \"country_id\": null,\n    \"company_id\": null,\n    \"note\": null,\n    \"created_at\": \"2019-01-13 12:12:13\",\n    \"updated_at\": \"2019-01-13 16:43:39\",\n    \"deleted_at\": null,\n    \"full_name\": \"Destroy Jean\",\n    \"country\": null\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/persons/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"persons",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "Persons are the people. It may or may not be linked to an _User_. A person is defined by a first name and a last name, and serveral informations are available, like email, phone number or address.\n\nPersons are mainly used in _Events_: as _Beneficiaries_ to defined an event's client, or as _Assignees_ to define the people who will work on an event.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "13ee47d4-22ed-446e-b8ea-8a62035107f5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1907e069-e35d-40fa-81f7-e9c4f3701117",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Create tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Vintage\"\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/tags",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Just send the name of a tag, and that's it!"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New tag\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/tags",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 6,\n    \"name\": \"New tag\",\n    \"updated_at\": \"2018-12-31 15:40:54\",\n    \"created_at\": \"2018-12-31 15:40:54\"\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/tags",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"name\": [\n                \"name must not be empty\",\n                \"name must contain only letters (a-z) and digits (0-9)\",\n                \"name must have a length between 1 and 48\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Error : tag already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Vintage\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/tags",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": []\n    }\n}"
						}
					]
				},
				{
					"name": "Update tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a78f7e4f-f0ea-44f5-9ea7-a2460e1a2549",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Just modified Tag\"\n}\n"
						},
						"url": {
							"raw": "{{robert2_url}}/tags/6",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"tags",
								"6"
							]
						},
						"description": "Modify a tag's name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Just modified Tag\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/tags/6",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 6,\n    \"name\": \"Just modified Tag\",\n    \"created_at\": \"2018-12-31 15:40:54\",\n    \"updated_at\": \"2018-12-31 15:42:33\",\n    \"deleted_at\": null\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/tags/4",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"4"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"name\": [\n                \"name must not be empty\",\n                \"name must contain only letters (a-z) and digits (0-9)\",\n                \"name must have a length between 1 and 48\"\n            ]\n        }\n    }\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Just modified Tag\"\n}\n"
								},
								"url": {
									"raw": "{{robert2_url}}/tags/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get all tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e069c7-17d9-4603-a6b9-ca13f4bf0500",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/tags",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"tags"
							]
						},
						"description": "Retreive all the tags of the application, sorted by name, and within pagination."
					},
					"response": [
						{
							"name": "Soft deleted only",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags?deleted=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "deleted",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/tags?deleted=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/tags?deleted=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/tags\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 4,\n            \"name\": \"Useless\",\n            \"created_at\": \"2019-01-13 12:13:43\",\n            \"updated_at\": \"2019-01-13 12:13:55\",\n            \"deleted_at\": \"2019-01-13 12:13:55\"\n        }\n    ]\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/tags?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/tags?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/tags\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 5,\n        \"total\": 5\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Client\",\n            \"created_at\": \"2018-12-31 00:50:35\",\n            \"updated_at\": \"2018-12-31 00:50:35\",\n            \"deleted_at\": null\n        },\n        {\n            \"id\": 6,\n            \"name\": \"Just modified Tag\",\n            \"created_at\": \"2018-12-31 15:40:54\",\n            \"updated_at\": \"2018-12-31 15:42:33\",\n            \"deleted_at\": null\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Vintage\",\n            \"created_at\": \"2018-12-31 00:51:04\",\n            \"updated_at\": \"2018-12-31 00:51:04\",\n            \"deleted_at\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get a tag's people",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e069c7-17d9-4603-a6b9-ca13f4bf0500",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/tags/1/persons",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"tags",
								"1",
								"persons"
							]
						},
						"description": "Retreive all the _Persons_ that have the given tag."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/999/persons",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"999",
										"persons"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/1/persons",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"1",
										"persons"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/tags/3/persons?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/tags/3/persons?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/tags/3/persons\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 3,\n            \"user_id\": null,\n            \"first_name\": \"Jean\",\n            \"last_name\": \"Destroy\",\n            \"nickname\": \"to-be-deleted\",\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 00:52:53\",\n            \"updated_at\": \"2018-12-31 00:52:53\",\n            \"deleted_at\": null,\n            \"full_name\": \"Destroy Jean\",\n            \"country\": null,\n            \"pivot\": {\n                \"tag_id\": \"1\",\n                \"taggable_id\": \"3\",\n                \"taggable_type\": \"Robert2\\\\API\\\\Models\\\\Person\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get a tag's materials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e069c7-17d9-4603-a6b9-ca13f4bf0500",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/tags/4/materials",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"tags",
								"4",
								"materials"
							]
						},
						"description": "Retreive all the _Materials_ that have the given tag."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/2/materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"2",
										"materials"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/tags/4/materials?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/tags/4/materials?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/tags/4/materials\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 2,\n            \"name\": \"New matos\",\n            \"description\": \"Nouveau matos de ouf\",\n            \"reference\": \"newmatos01\",\n            \"park_id\": 1,\n            \"category_id\": 1,\n            \"sub_category_id\": null,\n            \"rental_price\": 10,\n            \"stock_quantity\": 5,\n            \"out_of_order_quantity\": null,\n            \"replacement_price\": 525,\n            \"serial_number\": null,\n            \"is_hidden_on_bill\": false,\n            \"note\": null,\n            \"created_at\": \"2018-12-31 01:02:12\",\n            \"updated_at\": \"2018-12-31 01:02:12\",\n            \"deleted_at\": null,\n            \"park\": {\n                \"id\": 1,\n                \"name\": \"default\"\n            },\n            \"category\": {\n                \"id\": 1,\n                \"name\": \"son\"\n            },\n            \"sub_category\": null,\n            \"pivot\": {\n                \"tag_id\": \"2\",\n                \"taggable_id\": \"2\",\n                \"taggable_type\": \"Robert2\\\\API\\\\Models\\\\Material\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/999/materials",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"999",
										"materials"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Search in tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/tags/search?name=cli",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"tags",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "cli"
								}
							]
						},
						"description": "Search tags by their name."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/search?name=cli",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"search"
									],
									"query": [
										{
											"key": "name",
											"value": "cli"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/tags/search?name=cli&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/tags/search?name=cli&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/tags/search\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Client\",\n            \"created_at\": \"2018-12-31 00:50:35\",\n            \"updated_at\": \"2018-12-31 00:50:35\",\n            \"deleted_at\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete a tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "136482c6-40a9-4cf1-8f7d-82727e64d4f0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/tags/6",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"tags",
								"6"
							]
						},
						"description": "Remove a tag using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/6",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						},
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/6",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 6,\n    \"name\": \"Just modified Tag\",\n    \"created_at\": \"2018-12-31 15:40:54\",\n    \"updated_at\": \"2018-12-31 15:52:04\",\n    \"deleted_at\": \"2018-12-31 15:52:04\"\n}"
						}
					]
				},
				{
					"name": "Restore a tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "012c9212-c04d-4da7-88e8-ec40e4f3e416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/tags/restore/6",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"tags",
								"restore",
								"6"
							]
						},
						"description": "Restore a tag that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/tags/restore/6",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"tags",
										"restore",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 6,\n    \"name\": \"Useless\",\n    \"created_at\": \"2019-01-13 12:13:43\",\n    \"updated_at\": \"2019-01-13 16:45:07\",\n    \"deleted_at\": null\n}"
						}
					]
				}
			],
			"description": "Tags are a mean to tidy up and sort _Materials_ and _Persons_. A tag is defined by just a name.\n\nEach _Material_ can have several _Tags_, and each _Tag_ can have serveral _Materials_. Same for _Persons_.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d7c546cc-9e3a-4c05-b887-be0aceb0f8fb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fad98139-62b2-4bc5-8dcf-dbdf1b72b02a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "User sign up (create)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "10c08b40-bbeb-4402-a3d7-6718cbf3b0bb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d0963a15-e8ac-4ffa-8e3d-69a44d85d29a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pseudo\": \"newuser\",\n    \"email\": \"newuser@robertmanager.org\",\n    \"password\": \"test\",\n    \"group_id\": \"member\",\n    \"person\": {\n    \t\"first_name\": \"Member\",\n    \t\"last_name\": \"Test\"\n    }\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/users/signup",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users",
								"signup"
							]
						},
						"description": "Create a user, directly with its associated _Person_."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pseudo\": \"newuser\",\n    \"email\": \"newuser@robertmanager.org\",\n    \"password\": \"test\",\n    \"group_id\": \"member\",\n    \"person\": {\n    \t\"first_name\": \"Member\",\n    \t\"last_name\": \"Test\"\n    }\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/signup",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pseudo\": \"newuser\",\n    \"email\": \"newuser@robertmanager.org\",\n    \"group_id\": \"member\",\n    \"updated_at\": \"2018-12-31 16:04:26\",\n    \"created_at\": \"2018-12-31 16:04:26\",\n    \"id\": 3,\n    \"person\": {\n        \"id\": 4,\n        \"user_id\": 3,\n    \t\"first_name\": \"Member\",\n    \t\"last_name\": \"Test\",\n        \"nickname\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"street\": null,\n        \"postal_code\": null,\n        \"locality\": null,\n        \"country_id\": null,\n        \"company_id\": null,\n        \"note\": null,\n        \"created_at\": \"2018-12-31 16:04:26\",\n        \"updated_at\": \"2018-12-31 16:04:26\",\n        \"deleted_at\": null,\n        \"full_name\": \"Test Member\",\n        \"country\": null\n    }\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pseudo\": \"\",\n    \"email\": \"invalid\",\n    \"password\": \"\",\n    \"group_id\": \"invalid\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/signup",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"signup"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"pseudo\": [\n                \"pseudo must not be empty\",\n                \"pseudo must contain only letters (a-z) and digits (0-9)\",\n                \"pseudo must have a length between 4 and 100\"\n            ],\n            \"email\": [\n                \"email must be valid email\"\n            ],\n            \"group_id\": [\n                \"At least one of these rules must pass for group_id\",\n                \"group_id must be equals \\\"admin\\\"\",\n                \"group_id must be equals \\\"member\\\"\",\n                \"group_id must be equals \\\"visitor\\\"\"\n            ],\n            \"password\": [\n                \"password must not be empty\",\n                \"password must have a length between 4 and 255\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10c49ee2-cfbd-4faf-aa36-111563079c15",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"pseudo\": \"tobedeleted\",\n    \"person\": {\n    \t\"first_name\": \"Remove\",\n    \t\"last_name\": \"Me please\"\n    }\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/users/3",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users",
								"3"
							]
						},
						"description": "Modify user's pseudo and associated person's informations."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"pseudo\": \"tobedeleted\",\n    \"person\": {\n    \t\"first_name\": \"Remove\",\n    \t\"last_name\": \"Me please\"\n    }\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/3",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 3,\n    \"pseudo\": \"tobedeleted\",\n    \"email\": \"removeme@test.org\",\n    \"group_id\": \"member\",\n    \"created_at\": \"2018-12-31 16:04:26\",\n    \"updated_at\": \"2018-12-31 16:08:33\",\n    \"deleted_at\": null,\n    \"person\": {\n        \"id\": 4,\n        \"user_id\": 3,\n        \"first_name\": \"Me please\",\n        \"last_name\": \"Remove\",\n        \"nickname\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"street\": null,\n        \"postal_code\": null,\n        \"locality\": null,\n        \"country_id\": null,\n        \"company_id\": null,\n        \"note\": null,\n        \"created_at\": \"2018-12-31 16:04:26\",\n        \"updated_at\": \"2018-12-31 16:04:26\",\n        \"deleted_at\": null,\n        \"full_name\": \"Remove Me please\",\n        \"country\": null\n    }\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"pseudo\": \"tobedeleted\",\n    \"person\": {\n    \t\"first_name\": \"Remove\",\n    \t\"last_name\": \"Me please\"\n    }\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pseudo\": \"\",\n    \"email\": \"invalid\",\n    \"password\": \"\",\n    \"group_id\": \"invalid\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"1"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"pseudo\": [\n                \"pseudo must not be empty\",\n                \"pseudo must contain only letters (a-z) and digits (0-9)\",\n                \"pseudo must have a length between 4 and 100\"\n            ],\n            \"email\": [\n                \"email must be valid email\"\n            ],\n            \"group_id\": [\n                \"At least one of these rules must pass for group_id\",\n                \"group_id must be equals \\\"admin\\\"\",\n                \"group_id must be equals \\\"member\\\"\",\n                \"group_id must be equals \\\"visitor\\\"\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "User sign in (auth token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10c49ee2-cfbd-4faf-aa36-111563079c15",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identifier\": \"admin\",\n    \"password\" : \"admin\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/users/signin",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users",
								"signin"
							]
						},
						"description": "This is the exact same endpoint as the _AUTH - Token_ one.\n\nSame payload, same result: give a username and password, and get your access token for the session. For example of responses, see [AUTH - Token](/apidoc#request-auth-token) request documentation."
					},
					"response": [
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"identifier\": \"inexistant\",\n    \"password\" : \"test\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/signin",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"signin"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"requested\": \"(POST) http://robert2-api.nostromo/api/users/signin\",\n        \"code\": 404,\n        \"message\": \"The required resource was not found.\",\n        \"file\": \"/home/polo/WEB/perso/Robert2-api/src/App/Models/User.php, line 118.\"\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"identifier\": \"admin\",\n    \"password\" : \"admin\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/signin",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"signin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "private, no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 1,\n        \"pseudo\": \"admin\",\n        \"email\": \"admin@robertmanager.org\",\n        \"group_id\": \"admin\",\n        \"created_at\": \"2018-12-26 23:05:53\",\n        \"updated_at\": \"2018-12-26 23:05:53\",\n        \"deleted_at\": null,\n        \"person\": {\n            \"id\": 1,\n            \"user_id\": 1,\n            \"first_name\": \"Admin\",\n            \"last_name\": \"Example\",\n            \"nickname\": null,\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-26 23:05:53\",\n            \"updated_at\": \"2018-12-26 23:05:53\",\n            \"deleted_at\": null,\n            \"full_name\": \"Admin Example\",\n            \"country\": null\n        }\n    },\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NDYyMTY5OTMsImV4cCI6MTU0NjIyNDE5MywidXNlciI6eyJpZCI6MSwicHNldWRvIjoicG9sbyIsImVtYWlsIjoicG9sb0Bwb2xvc3Nvbi5jb20iLCJncm91cF9pZCI6ImFkbWluIiwiY3JlYXRlZF9hdCI6IjIwMTgtMTItMjYgMjM6MDU6NTMiLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0yNiAyMzowNTo1MyIsImRlbGV0ZWRfYXQiOm51bGwsInBlcnNvbiI6eyJpZCI6MSwidXNlcl9pZCI6MSwiZmlyc3RfbmFtZSI6IlZdfERfLCJsYXN0X25hbWUiOiJNYWlsbGFyZGV0Iiwibmlja25hbWUiOm51bGwsImVtYWlsIjpudWxsLCJwaG9uZSI6bnVsbCwic3RyZWV0IjpudWxsLCJwb3N0YWxfY29kZSI6bnVsbCwibG9jYWxpdHkiOm51bGwsImNvdW50cnlfaWQiOm51bGwsImNvbXBhbnlfaWQiOm51bGwsIm5vdGUiOm51bGwsImNyZWF0ZWRfYXQiOiIyMDE4LTEyLTI2IDIzOjA1OjUzIiwidXBkYXRlZF9hdCI6IjIwMTgtMTItMjYgMjM6MDU6NTMiLCJkZWxldGVkX2F0IjpudWxsLCJmdWxsX25hbWUiOiJQb2xvIE1haWxsYXJkZFrgoMsjb3VudHJ5IjpudWxsfX19.aGlHpQSQ1ftQCd_F3Uq7CtikC-trfs4l0j7xskaLOyU\"\n}"
						},
						{
							"name": "Validation error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"identifier\": \"\",\n    \"password\" : \"\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/signin",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"signin"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"code\": 400,\n        \"message\": \"Validation failed. See error[details] for more informations.\",\n        \"details\": {\n            \"identifier\": [\n                \"Identifier must not be empty\"\n            ],\n            \"password\": [\n                \"Password must not be empty\",\n                \"Password must have a length greater than 4\"\n            ]\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1c891c2-8bc1-4881-b27a-41d8cd31bb9d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/users",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Retreive all users of the application, with their associated _Persons_, sorted by pseudo, and within pagination."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/users?page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/users?page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/users\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 2,\n        \"total\": 2\n    },\n    \"data\": [\n        {\n            \"id\": 1,\n            \"pseudo\": \"admin\",\n            \"email\": \"admin@robertmanager.org\",\n            \"group_id\": \"admin\",\n            \"created_at\": \"2018-12-29 19:12:01\",\n            \"updated_at\": \"2018-12-29 19:12:01\",\n            \"deleted_at\": null,\n            \"person\": {\n                \"id\": 2,\n                \"user_id\": 2,\n                \"first_name\": \"Admin\",\n                \"last_name\": \"Robertus\",\n                \"nickname\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"street\": null,\n                \"postal_code\": null,\n                \"locality\": null,\n                \"country_id\": null,\n                \"company_id\": null,\n                \"note\": null,\n                \"created_at\": \"2018-12-29 19:12:01\",\n                \"updated_at\": \"2018-12-29 19:12:01\",\n                \"deleted_at\": null,\n                \"full_name\": \"Robertus Admin\",\n                \"country\": null\n            }\n        },\n        {\n            \"id\": 2,\n            \"pseudo\": \"tobedeleted\",\n            \"email\": \"removeme@test.org\",\n            \"group_id\": \"member\",\n            \"created_at\": \"2018-12-31 16:04:26\",\n            \"updated_at\": \"2018-12-31 16:08:33\",\n            \"deleted_at\": null,\n            \"person\": {\n                \"id\": 4,\n                \"user_id\": 3,\n                \"first_name\": \"Me please\",\n                \"last_name\": \"Remove\",\n                \"nickname\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"street\": null,\n                \"postal_code\": null,\n                \"locality\": null,\n                \"country_id\": null,\n                \"company_id\": null,\n                \"note\": null,\n                \"created_at\": \"2018-12-31 16:04:26\",\n                \"updated_at\": \"2018-12-31 16:04:26\",\n                \"deleted_at\": null,\n                \"full_name\": \"Remove Me please\",\n                \"country\": null\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Soft deleted only",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users?deleted=1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "deleted",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"pagination\": {\n        \"current_page\": 1,\n        \"first_page_url\": \"/api/users?deleted=1&page=1\",\n        \"from\": 1,\n        \"last_page\": 1,\n        \"last_page_url\": \"/api/users?deleted=1&page=1\",\n        \"next_page_url\": null,\n        \"path\": \"/api/users\",\n        \"per_page\": 100,\n        \"prev_page_url\": null,\n        \"to\": 1,\n        \"total\": 1\n    },\n    \"data\": [\n        {\n            \"id\": 2,\n            \"pseudo\": \"newuser\",\n            \"email\": \"newuser@robertmanager.org\",\n            \"group_id\": \"member\",\n            \"created_at\": \"2019-01-13 12:15:01\",\n            \"updated_at\": \"2019-01-13 12:15:13\",\n            \"deleted_at\": \"2019-01-13 12:15:13\",\n            \"person\": {\n                \"id\": 3,\n                \"user_id\": 2,\n                \"first_name\": \"Member\",\n                \"last_name\": \"Test\",\n                \"nickname\": null,\n                \"email\": null,\n                \"phone\": null,\n                \"street\": null,\n                \"postal_code\": null,\n                \"locality\": null,\n                \"country_id\": null,\n                \"company_id\": null,\n                \"note\": null,\n                \"created_at\": \"2019-01-13 12:15:01\",\n                \"updated_at\": \"2019-01-13 12:15:01\",\n                \"deleted_at\": null,\n                \"full_name\": \"Member Test\",\n                \"country\": null\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get one user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "848affdf-e45c-4188-9237-e7bef6ea2ee1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/users/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users",
								"2"
							]
						},
						"description": "Retreive one user with its associated _Person_."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"pseudo\": \"tobedeleted\",\n    \"email\": \"removeme@test.org\",\n    \"group_id\": \"member\",\n    \"created_at\": \"2018-12-31 16:04:26\",\n    \"updated_at\": \"2018-12-31 16:08:33\",\n    \"deleted_at\": null,\n    \"person\": {\n        \"id\": 4,\n        \"user_id\": 3,\n        \"first_name\": \"Me please\",\n        \"last_name\": \"Remove\",\n        \"nickname\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"street\": null,\n        \"postal_code\": null,\n        \"locality\": null,\n        \"country_id\": null,\n        \"company_id\": null,\n        \"note\": null,\n        \"created_at\": \"2018-12-31 16:04:26\",\n        \"updated_at\": \"2018-12-31 16:04:26\",\n        \"deleted_at\": null,\n        \"full_name\": \"Remove Me please\",\n        \"country\": null\n    }\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Get user settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133ee996-f2c0-4204-a274-80cec95e11d0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/users/1/settings",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users",
								"1",
								"settings"
							]
						},
						"description": "Get a user's settings data."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/1/settings",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"1",
										"settings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"user_id\": 1,\n    \"language\": \"EN\",\n    \"auth_token_validity_duration\": 12,\n    \"created_at\": \"2019-01-04 00:16:57\",\n    \"updated_at\": \"2019-01-04 00:16:57\"\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/3/settings",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"3",
										"settings"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Update user settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "133ee996-f2c0-4204-a274-80cec95e11d0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"language\": \"FR\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/users/1/settings",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users",
								"1",
								"settings"
							]
						},
						"description": "Modify a user's settings data."
					},
					"response": [
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"language\": \"FR\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/999/settings",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"999",
										"settings"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"language\": \"FR\"\n}"
								},
								"url": {
									"raw": "{{robert2_url}}/users/1/settings",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"1",
										"settings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"user_id\": 1,\n    \"language\": \"FR\",\n    \"auth_token_validity_duration\": 12,\n    \"created_at\": \"2019-01-04 00:16:57\",\n    \"updated_at\": \"2019-01-04 16:18:25\"\n}"
						}
					]
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "848affdf-e45c-4188-9237-e7bef6ea2ee1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/users/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users",
								"2"
							]
						},
						"description": "Remove a tag using its ID.\n\nWorks in 2 steps:\n\n- First call to this request: sets the `deleted_at` field with current date and time.\n- Second call: actually __delete__ the item from database."
					},
					"response": [
						{
							"name": "Success - 2nd time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"destroyed\": true\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						},
						{
							"name": "Success - 1st time",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/2",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"pseudo\": \"tobedeleted\",\n    \"email\": \"removeme@test.org\",\n    \"group_id\": \"member\",\n    \"password\": \"$2y$10$wqoEEP7oxcDiH3iqdJ6Lj.RPc4J0n.4egitFXBZxDqsW43csrAyjO\",\n    \"created_at\": \"2018-12-31 16:04:26\",\n    \"updated_at\": \"2018-12-31 16:15:17\",\n    \"deleted_at\": \"2018-12-31 16:15:17\",\n    \"person\": {\n        \"id\": 4,\n        \"user_id\": 3,\n        \"first_name\": \"Me please\",\n        \"last_name\": \"Remove\",\n        \"nickname\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"street\": null,\n        \"postal_code\": null,\n        \"locality\": null,\n        \"country_id\": null,\n        \"company_id\": null,\n        \"note\": null,\n        \"created_at\": \"2018-12-31 16:04:26\",\n        \"updated_at\": \"2018-12-31 16:04:26\",\n        \"deleted_at\": null,\n        \"full_name\": \"Remove Me please\",\n        \"country\": null\n    }\n}"
						}
					]
				},
				{
					"name": "Restore a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "012c9212-c04d-4da7-88e8-ec40e4f3e416",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{robert2_url}}/users/restore/2",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"users",
								"restore",
								"2"
							]
						},
						"description": "Restore a user that was previously soft-deleted."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/restore/1",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"restore",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"pseudo\": \"newuser\",\n    \"email\": \"newuser@robertmanager.org\",\n    \"group_id\": \"member\",\n    \"password\": \"$2y$10$1vDPqKOybiEPFAW0i2NwGOe4nUejCZQQhS8JsCg3GGbJ6VpNeJcFS\",\n    \"created_at\": \"2019-01-13 12:15:01\",\n    \"updated_at\": \"2019-01-13 16:46:11\",\n    \"deleted_at\": null,\n    \"person\": {\n        \"id\": 3,\n        \"user_id\": 2,\n        \"first_name\": \"Member\",\n        \"last_name\": \"Test\",\n        \"nickname\": null,\n        \"email\": null,\n        \"phone\": null,\n        \"street\": null,\n        \"postal_code\": null,\n        \"locality\": null,\n        \"country_id\": null,\n        \"company_id\": null,\n        \"note\": null,\n        \"created_at\": \"2019-01-13 12:15:01\",\n        \"updated_at\": \"2019-01-13 12:15:01\",\n        \"deleted_at\": null,\n        \"full_name\": \"Test Member\",\n        \"country\": null\n    }\n}"
						},
						{
							"name": "Not found error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{robert2_url}}/users/restore/999",
									"host": [
										"{{robert2_url}}"
									],
									"path": [
										"users",
										"restore",
										"999"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json;charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "Users are, well... the users of the application. They are defined by a pseudo, a password, a _Group_ and an email address.\n\nA user can be linked to a _Person_, in order to provide more informations about her or him.\n\nThe _Group_ of an user must be `admin`, `member`, or `visitor`.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5343d649-e780-4fa1-8255-27ece8493812",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "995df8d3-0de4-4f15-8d45-d8b307349b28",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "AUTH - Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b44e465d-1562-43be-822b-064dafc7fac8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Token is present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.tocken).to.not.equals(null);",
							"    ",
							"    pm.globals.set(\"auth_token\", jsonData.token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\": \"{{robert2_email}}\",\n    \"password\": \"{{robert2_password}}\"\n}"
				},
				"url": {
					"raw": "{{robert2_url}}/token/",
					"host": [
						"{{robert2_url}}"
					],
					"path": [
						"token",
						""
					]
				},
				"description": "This is the only way to claim access to the API.\n\nIf the given username and password are provided, the response contains a _token_, which must then be included in every subsequent requests ' headers, for them to be authorized access."
			},
			"response": [
				{
					"name": "Auth Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identifier\": \"admin\",\n    \"password\": \"wrong-password\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/token/",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identifier\": \"\",\n    \"password\": \"\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/token/",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": {\n            \"identifier\": [\n                \"identifier must not be empty\"\n            ],\n            \"password\": [\n                \"password must not be empty\",\n                \"password must have a length greater than 4\"\n            ]\n        }\n    }\n}"
				},
				{
					"name": "Not found Error",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identifier\": \"inexistant-user\",\n    \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/token/",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": false,\n    \"error\": {\n        \"message\": \"An error has occured\",\n        \"details\": [\n            \"The required resource was not found.\"\n        ]\n    }\n}"
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"identifier\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{robert2_url}}/token/",
							"host": [
								"{{robert2_url}}"
							],
							"path": [
								"token",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "private, no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json;charset=utf-8"
						}
					],
					"cookie": [],
					"body": "{\n    \"user\": {\n        \"id\": 1,\n        \"pseudo\": \"admin\",\n        \"email\": \"admin@robertmanager.org\",\n        \"group_id\": \"admin\",\n        \"created_at\": \"2018-12-26 23:05:53\",\n        \"updated_at\": \"2018-12-26 23:05:53\",\n        \"deleted_at\": null,\n        \"person\": {\n            \"id\": 1,\n            \"user_id\": 1,\n            \"first_name\": \"Admin\",\n            \"last_name\": \"Example\",\n            \"nickname\": null,\n            \"email\": null,\n            \"phone\": null,\n            \"street\": null,\n            \"postal_code\": null,\n            \"locality\": null,\n            \"country_id\": null,\n            \"company_id\": null,\n            \"note\": null,\n            \"created_at\": \"2018-12-26 23:05:53\",\n            \"updated_at\": \"2018-12-26 23:05:53\",\n            \"deleted_at\": null,\n            \"full_name\": \"Admin Example\",\n            \"country\": null\n        }\n    },\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NDYyMTY5OTMsImV4cCI6MTU0NjIyNDE5MywidXNlciI6eyJpZCI6MSwicHNldWRvIjoicG9sbyIsImVtYWlsIjoicG9sb0Bwb2xvc3Nvbi5jb20iLCJncm91cF9pZCI6ImFkbWluIiwiY3JlYXRlZF9hdCI6IjIwMTgtMTItMjYgMjM6MDU6NTMiLCJ1cGRhdGVkX2F0IjoiMjAxOC0xMi0yNiAyMzowNTo1MyIsImRlbGV0ZWRfYXQiOm51bGwsInBlcnNvbiI6eyJpZCI6MSwidXNlcl9pZCI6MSwiZmlyc3RfbmFtZSI6IlZdfERfLCJsYXN0X25hbWUiOiJNYWlsbGFyZGV0Iiwibmlja25hbWUiOm51bGwsImVtYWlsIjpudWxsLCJwaG9uZSI6bnVsbCwic3RyZWV0IjpudWxsLCJwb3N0YWxfY29kZSI6bnVsbCwibG9jYWxpdHkiOm51bGwsImNvdW50cnlfaWQiOm51bGwsImNvbXBhbnlfaWQiOm51bGwsIm5vdGUiOm51bGwsImNyZWF0ZWRfYXQiOiIyMDE4LTEyLTI2IDIzOjA1OjUzIiwidXBkYXRlZF9hdCI6IjIwMTgtMTItMjYgMjM6MDU6NTMiLCJkZWxldGVkX2F0IjpudWxsLCJmdWxsX25hbWUiOiJQb2xvIE1haWxsYXJkZFrgoMsjb3VudHJ5IjpudWxsfX19.aGlHpQSQ1ftQCd_F3Uq7CtikC-trfs4l0j7xskaLOyU\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "54ce1f88-15f6-44ca-95f1-baa40186349a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2cd5c0d8-f241-4ba9-afca-0ec7090aa0b5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}